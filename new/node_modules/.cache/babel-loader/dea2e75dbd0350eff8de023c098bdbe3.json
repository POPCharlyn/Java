{"remainingRequest":"F:\\WebStorm\\new\\node_modules\\babel-loader\\lib\\index.js!F:\\WebStorm\\new\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\WebStorm\\new\\src\\store\\modules\\customer.js","dependencies":[{"path":"F:\\WebStorm\\new\\src\\store\\modules\\customer.js","mtime":1536290331543},{"path":"F:\\WebStorm\\new\\babel.config.js","mtime":1536225392373},{"path":"F:\\WebStorm\\new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637058075377},{"path":"F:\\WebStorm\\new\\node_modules\\babel-loader\\lib\\index.js","mtime":1636697064810},{"path":"F:\\WebStorm\\new\\node_modules\\eslint-loader\\index.js","mtime":1628769441405}],"contextDependencies":[],"result":["import _defineProperty from \"F:\\\\WebStorm\\\\new\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\defineProperty.js\";\n\nvar _mutations, _actions;\n\nimport axios from \"../axios\";\nimport actions from \"../action-types\";\nimport mutations from \"../mutation-types\";\nexport default {\n  state: {\n    total: 0,\n    list: [],\n    person: {}\n  },\n  mutations: (_mutations = {}, _defineProperty(_mutations, mutations.RESIDENT_PERSON, function (state, payload) {\n    state.person = payload.data;\n  }), _defineProperty(_mutations, mutations.RESIDENT_LIST, function (state, payload) {\n    state.total = payload.count;\n    state.list = payload.data;\n  }), _mutations),\n  actions: (_actions = {}, _defineProperty(_actions, actions.get.RESIDENT_LIST, function (_ref, payload) {\n    var commit = _ref.commit;\n    return axios.get(\"/resident/list?pageNum=\".concat(payload.pageNum, \"&pageSize=\").concat(payload.pageSize)).then(function (_ref2) {\n      var data = _ref2.data;\n      commit(mutations.RESIDENT_LIST, data);\n    });\n  }), _defineProperty(_actions, actions.get.RESIDENT_PERSON, function (_ref3, id) {\n    var commit = _ref3.commit;\n    return axios.get('/resident/' + id).then(function (_ref4) {\n      var data = _ref4.data;\n      commit(mutations.RESIDENT_PERSON, data);\n    });\n  }), _defineProperty(_actions, actions.post.RESIDENT_PERSON, function (context, payload) {\n    return axios.post('/resident', payload);\n  }), _defineProperty(_actions, actions.put.RESIDENT_PERSON, function (context, payload) {\n    return axios.put('/resident/' + payload.residentId, payload);\n  }), _defineProperty(_actions, actions.delete.RESIDENT_PERSON, function (context, id) {\n    return axios.delete('/resident/' + id);\n  }), _actions)\n};",{"version":3,"sources":["F:/WebStorm/new/src/store/modules/customer.js"],"names":["axios","actions","mutations","state","total","list","person","RESIDENT_PERSON","payload","data","RESIDENT_LIST","count","get","commit","pageNum","pageSize","then","id","post","context","put","residentId","delete"],"mappings":";;;;AAAA,OAAOA,KAAP;AACA,OAAOC,OAAP;AACA,OAAOC,SAAP;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,CADF;AAELC,IAAAA,IAAI,EAAE,EAFD;AAGLC,IAAAA,MAAM,EAAE;AAHH,GADM;AAMbJ,EAAAA,SAAS,gDACLA,SAAS,CAACK,eADL,YACwBJ,KADxB,EAC+BK,OAD/B,EACwC;AAC7CL,IAAAA,KAAK,CAACG,MAAN,GAAeE,OAAO,CAACC,IAAvB;AACD,GAHM,+BAILP,SAAS,CAACQ,aAJL,YAIsBP,KAJtB,EAI6BK,OAJ7B,EAIsC;AAC3CL,IAAAA,KAAK,CAACC,KAAN,GAAcI,OAAO,CAACG,KAAtB;AACAR,IAAAA,KAAK,CAACE,IAAN,GAAaG,OAAO,CAACC,IAArB;AACD,GAPM,cANI;AAebR,EAAAA,OAAO,4CACHA,OAAO,CAACW,GAAR,CAAYF,aADT,kBACsCF,OADtC,EAC+C;AAAA,QAAnBK,MAAmB,QAAnBA,MAAmB;AAClD,WAAOb,KAAK,CAACY,GAAN,kCAAoCJ,OAAO,CAACM,OAA5C,uBAAgEN,OAAO,CAACO,QAAxE,GAAoFC,IAApF,CAAyF,iBAAc;AAAA,UAAXP,IAAW,SAAXA,IAAW;AAC5GI,MAAAA,MAAM,CAACX,SAAS,CAACQ,aAAX,EAA0BD,IAA1B,CAAN;AACD,KAFM,CAAP;AAGD,GALI,6BAMHR,OAAO,CAACW,GAAR,CAAYL,eANT,mBAMwCU,EANxC,EAM4C;AAAA,QAAdJ,MAAc,SAAdA,MAAc;AAC/C,WAAOb,KAAK,CAACY,GAAN,CAAU,eAAeK,EAAzB,EAA6BD,IAA7B,CAAkC,iBAAc;AAAA,UAAXP,IAAW,SAAXA,IAAW;AACrDI,MAAAA,MAAM,CAACX,SAAS,CAACK,eAAX,EAA4BE,IAA5B,CAAN;AACD,KAFM,CAAP;AAGD,GAVI,6BAWHR,OAAO,CAACiB,IAAR,CAAaX,eAXV,YAW6BY,OAX7B,EAWsCX,OAXtC,EAW+C;AAClD,WAAOR,KAAK,CAACkB,IAAN,CAAW,WAAX,EAAwBV,OAAxB,CAAP;AACD,GAbI,6BAcHP,OAAO,CAACmB,GAAR,CAAYb,eAdT,YAc4BY,OAd5B,EAcqCX,OAdrC,EAc8C;AACjD,WAAOR,KAAK,CAACoB,GAAN,CAAU,eAAeZ,OAAO,CAACa,UAAjC,EAA6Cb,OAA7C,CAAP;AACD,GAhBI,6BAiBHP,OAAO,CAACqB,MAAR,CAAef,eAjBZ,YAiB+BY,OAjB/B,EAiBwCF,EAjBxC,EAiB4C;AAC/C,WAAOjB,KAAK,CAACsB,MAAN,CAAa,eAAeL,EAA5B,CAAP;AACD,GAnBI;AAfM,CAAf","sourcesContent":["import axios from '../axios'\r\nimport actions from '../action-types'\r\nimport mutations from '../mutation-types'\r\n\r\nexport default {\r\n  state: {\r\n    total: 0,\r\n    list: [],\r\n    person: {}\r\n  },\r\n  mutations: {\r\n    [ mutations.RESIDENT_PERSON ] (state, payload) {\r\n      state.person = payload.data\r\n    },\r\n    [ mutations.RESIDENT_LIST ] (state, payload) {\r\n      state.total = payload.count\r\n      state.list = payload.data\r\n    }\r\n  },\r\n  actions: {\r\n    [ actions.get.RESIDENT_LIST ] ({ commit }, payload) {\r\n      return axios.get(`/resident/list?pageNum=${payload.pageNum}&pageSize=${payload.pageSize}`).then(({ data }) => {\r\n        commit(mutations.RESIDENT_LIST, data)\r\n      })\r\n    },\r\n    [ actions.get.RESIDENT_PERSON ] ({ commit }, id) {\r\n      return axios.get('/resident/' + id).then(({ data }) => {\r\n        commit(mutations.RESIDENT_PERSON, data)\r\n      })\r\n    },\r\n    [ actions.post.RESIDENT_PERSON ] (context, payload) {\r\n      return axios.post('/resident', payload)\r\n    },\r\n    [ actions.put.RESIDENT_PERSON ] (context, payload) {\r\n      return axios.put('/resident/' + payload.residentId, payload)\r\n    },\r\n    [ actions.delete.RESIDENT_PERSON ] (context, id) {\r\n      return axios.delete('/resident/' + id)\r\n    }\r\n  }\r\n}\r\n"]}]}