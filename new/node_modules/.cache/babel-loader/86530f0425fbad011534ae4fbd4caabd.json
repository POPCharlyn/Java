{"remainingRequest":"F:\\WebStorm\\new\\node_modules\\babel-loader\\lib\\index.js!F:\\WebStorm\\new\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\WebStorm\\new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\WebStorm\\new\\src\\components\\InMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\WebStorm\\new\\src\\components\\InMap.vue","mtime":1637829474054},{"path":"F:\\WebStorm\\new\\babel.config.js","mtime":1536225392373},{"path":"F:\\WebStorm\\new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637058075377},{"path":"F:\\WebStorm\\new\\node_modules\\babel-loader\\lib\\index.js","mtime":1636697064810},{"path":"F:\\WebStorm\\new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637058075377},{"path":"F:\\WebStorm\\new\\node_modules\\vue-loader\\lib\\index.js","mtime":1628769447361}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport inMap from 'inmap';\nexport default {\n  name: 'inMap',\n  props: {\n    toolbar: {\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      isEdit: false,\n      inmap: null,\n      overlay: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var myCity = new BMap.LocalCity();\n    myCity.get(function (result) {\n      console.log(result);\n      _this.inmap = new inMap.Map({\n        id: _this.$refs.map,\n        // skin: \"WhiteLover\",\n        center: [result.center.lng, result.center.lat],\n        zoom: {\n          value: 12,\n          show: true,\n          max: 20,\n          min: 5\n        }\n      });\n      _this.overlay = new inMap.PolygonEditorOverlay({\n        style: {\n          point: {\n            normal: {\n              backgroundColor: 'rgba(93,158,247,0.7)',\n              // 填充颜色\n              size: 3 // 半径\n\n            },\n            mouseOver: {\n              backgroundColor: 'rgba(93,158,247,1)',\n              borderColor: 'rgba(93,158,247,1)',\n              borderWidth: 1\n            },\n            selected: {\n              borderWidth: 1,\n              backgroundColor: 'rgba(184,0,0,1)'\n            }\n          },\n          virtualPoint: {\n            normal: {\n              backgroundColor: 'rgba(0, 0, 0, 0)',\n              borderWidth: 1,\n              borderColor: 'rgba(0,131,238, 1)',\n              size: 3\n            },\n            mouseOver: {\n              backgroundColor: 'rgba(0, 0, 0, 0)',\n              borderWidth: 2\n            }\n          },\n          polygon: {\n            normal: {\n              borderWidth: 1.5,\n              backgroundColor: 'rgba(0,184,255,0.3)'\n            }\n          }\n        },\n        event: {\n          onCreated: function onCreated(event) {\n            console.log('onCreate', event);\n          },\n          onChange: function onChange(type, event) {\n            console.log('onChange', type, event);\n          },\n          onDelete: function onDelete(event) {\n            console.log('onDelete', event);\n          }\n        }\n      });\n\n      _this.inmap.add(_this.overlay);\n    });\n  },\n  methods: {\n    createPath: function createPath() {\n      this.overlay.create();\n    },\n    getPath: function getPath() {\n      var pathData = this.overlay.getPath();\n      alert(JSON.stringify(pathData));\n      return pathData;\n    },\n    setPath: function setPath() {\n      var _this2 = this;\n\n      var bdary = new BMap.Boundary();\n      var name = '上海市普陀区'; // 获取行政区域\n\n      bdary.get(name, function (rs) {\n        console.log(rs); // 行政区域的点有多少个\n\n        var count = rs.boundaries.length;\n        var mapData = [];\n\n        var _loop = function _loop(i) {\n          var ply = new BMap.Polygon(rs.boundaries[i], {\n            strokeWeight: 2,\n            strokeColor: '#ff0000'\n          });\n          var points = [];\n          ply.getPath().forEach(function (point) {\n            points.push([point.lng, point.lat]);\n          });\n          mapData.push(points);\n        };\n\n        for (var i = 0; i < count; i++) {\n          _loop(i);\n        }\n\n        _this2.overlay.setPath({\n          geometry: {\n            type: 'MultiPolygon',\n            coordinates: [mapData]\n          }\n        });\n      });\n    },\n    changeEditStatus: function changeEditStatus() {\n      this.isEdit = !this.isEdit;\n      return this.isEdit ? this.overlay.enableEditing() : this.overlay.disableEditing();\n    }\n  }\n};",{"version":3,"sources":["InMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"inmap\">\r\n    <div class=\"button-group\" v-show=\"toolbar\">\r\n      <Button type=\"primary\" @click=\"createPath()\">创建围栏</Button>\r\n      <Button @click=\"changeEditStatus()\">{{ isEdit ? '关闭编辑' : '启用编辑' }}</Button>\r\n      <Button @click=\"getPath()\">获得围栏路径坐标</Button>\r\n    </div>\r\n    <div class=\"map\" ref=\"map\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport inMap from 'inmap'\r\n\r\nexport default {\r\n  name: 'inMap',\r\n  props: {\r\n    toolbar: {\r\n      default: false\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      isEdit: false,\r\n      inmap: null,\r\n      overlay: null\r\n    }\r\n  },\r\n  mounted () {\r\n    const myCity = new BMap.LocalCity()\r\n    myCity.get(result => {\r\n      console.log(result)\r\n      this.inmap = new inMap.Map({\r\n        id: this.$refs.map,\r\n        // skin: \"WhiteLover\",\r\n        center: [result.center.lng, result.center.lat],\r\n        zoom: {\r\n          value: 12,\r\n          show: true,\r\n          max: 20,\r\n          min: 5\r\n        }\r\n      })\r\n      this.overlay = new inMap.PolygonEditorOverlay({\r\n        style: {\r\n          point: {\r\n            normal: {\r\n              backgroundColor: 'rgba(93,158,247,0.7)', // 填充颜色\r\n              size: 3 // 半径\r\n            },\r\n            mouseOver: {\r\n              backgroundColor: 'rgba(93,158,247,1)',\r\n              borderColor: 'rgba(93,158,247,1)',\r\n              borderWidth: 1\r\n            },\r\n            selected: {\r\n              borderWidth: 1,\r\n              backgroundColor: 'rgba(184,0,0,1)'\r\n            }\r\n          },\r\n          virtualPoint: {\r\n            normal: {\r\n              backgroundColor: 'rgba(0, 0, 0, 0)',\r\n              borderWidth: 1,\r\n              borderColor: 'rgba(0,131,238, 1)',\r\n              size: 3\r\n            },\r\n            mouseOver: {\r\n              backgroundColor: 'rgba(0, 0, 0, 0)',\r\n              borderWidth: 2\r\n            }\r\n          },\r\n          polygon: {\r\n            normal: {\r\n              borderWidth: 1.5,\r\n              backgroundColor: 'rgba(0,184,255,0.3)'\r\n            }\r\n          }\r\n        },\r\n        event: {\r\n          onCreated (event) {\r\n            console.log('onCreate', event)\r\n          },\r\n          onChange (type, event) {\r\n            console.log('onChange', type, event)\r\n          },\r\n          onDelete (event) {\r\n            console.log('onDelete', event)\r\n          }\r\n        }\r\n      })\r\n      this.inmap.add(this.overlay)\r\n    })\r\n  },\r\n  methods: {\r\n    createPath () {\r\n      this.overlay.create()\r\n    },\r\n    getPath () {\r\n      const pathData = this.overlay.getPath()\r\n      alert(JSON.stringify(pathData))\r\n      return pathData\r\n    },\r\n    setPath () {\r\n      const bdary = new BMap.Boundary()\r\n      const name = '上海市普陀区'\r\n      // 获取行政区域\r\n      bdary.get(name, rs => {\r\n        console.log(rs)\r\n        // 行政区域的点有多少个\r\n        const count = rs.boundaries.length\r\n        const mapData = []\r\n        for (let i = 0; i < count; i++) {\r\n          const ply = new BMap.Polygon(rs.boundaries[i], {\r\n            strokeWeight: 2,\r\n            strokeColor: '#ff0000'\r\n          })\r\n          const points = []\r\n          ply.getPath().forEach(point => {\r\n            points.push([point.lng, point.lat])\r\n          })\r\n          mapData.push(points)\r\n        }\r\n        this.overlay.setPath({\r\n          geometry: {\r\n            type: 'MultiPolygon',\r\n            coordinates: [mapData]\r\n          }\r\n        })\r\n      })\r\n    },\r\n    changeEditStatus () {\r\n      this.isEdit = !this.isEdit\r\n      return this.isEdit ? this.overlay.enableEditing() : this.overlay.disableEditing()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.inmap {\r\n  .map {\r\n    width: 100%;\r\n    height: 100%;\r\n    min-width: 200px;\r\n    min-height: 200px;\r\n  }\r\n  .button-group {\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n  }\r\n  Button {\r\n    margin-right: 10px;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}