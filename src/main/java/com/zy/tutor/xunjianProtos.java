// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plateDetection.proto

package com.zy.tutor;

public final class xunjianProtos {
  private xunjianProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PictureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:apollo.plateDetection.Picture)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * image height, that is, number of rows
     * </pre>
     *
     * <code>optional uint32 height = 1;</code>
     * @return Whether the height field is set.
     */
    boolean hasHeight();
    /**
     * <pre>
     * image height, that is, number of rows
     * </pre>
     *
     * <code>optional uint32 height = 1;</code>
     * @return The height.
     */
    int getHeight();

    /**
     * <pre>
     * image width, that is, number of columns
     * </pre>
     *
     * <code>optional uint32 width = 2;</code>
     * @return Whether the width field is set.
     */
    boolean hasWidth();
    /**
     * <pre>
     * image width, that is, number of columns
     * </pre>
     *
     * <code>optional uint32 width = 2;</code>
     * @return The width.
     */
    int getWidth();

    /**
     * <code>optional string encoding = 3;</code>
     * @return Whether the encoding field is set.
     */
    boolean hasEncoding();
    /**
     * <code>optional string encoding = 3;</code>
     * @return The encoding.
     */
    String getEncoding();
    /**
     * <code>optional string encoding = 3;</code>
     * @return The bytes for encoding.
     */
    com.google.protobuf.ByteString
        getEncodingBytes();

    /**
     * <pre>
     * Full row length in bytes
     * </pre>
     *
     * <code>optional uint32 step = 4;</code>
     * @return Whether the step field is set.
     */
    boolean hasStep();
    /**
     * <pre>
     * Full row length in bytes
     * </pre>
     *
     * <code>optional uint32 step = 4;</code>
     * @return The step.
     */
    int getStep();

    /**
     * <pre>
     * actual matrix data, size is (step * rows)
     * </pre>
     *
     * <code>optional bytes data = 5;</code>
     * @return Whether the data field is set.
     */
    boolean hasData();
    /**
     * <pre>
     * actual matrix data, size is (step * rows)
     * </pre>
     *
     * <code>optional bytes data = 5;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();

    /**
     * <pre>
     *yujun  : 图像中的目标相对于巡检车的角度
     * </pre>
     *
     * <code>optional float relativeAngle = 6;</code>
     * @return Whether the relativeAngle field is set.
     */
    boolean hasRelativeAngle();
    /**
     * <pre>
     *yujun  : 图像中的目标相对于巡检车的角度
     * </pre>
     *
     * <code>optional float relativeAngle = 6;</code>
     * @return The relativeAngle.
     */
    float getRelativeAngle();

    /**
     * <pre>
     *yujun  : 图像中的目标相对于巡检车的距离
     * </pre>
     *
     * <code>optional float distance = 7;</code>
     * @return Whether the distance field is set.
     */
    boolean hasDistance();
    /**
     * <pre>
     *yujun  : 图像中的目标相对于巡检车的距离
     * </pre>
     *
     * <code>optional float distance = 7;</code>
     * @return The distance.
     */
    float getDistance();

    /**
     * <pre>
     *yujun  : 图像中的车牌相对于巡检车辆的位置
     * </pre>
     *
     * <code>optional int32 positionType = 8;</code>
     * @return Whether the positionType field is set.
     */
    boolean hasPositionType();
    /**
     * <pre>
     *yujun  : 图像中的车牌相对于巡检车辆的位置
     * </pre>
     *
     * <code>optional int32 positionType = 8;</code>
     * @return The positionType.
     */
    int getPositionType();

    /**
     * <pre>
     *yujun ： 所检测的车牌的面积 
     * </pre>
     *
     * <code>optional float licenseArea = 9;</code>
     * @return Whether the licenseArea field is set.
     */
    boolean hasLicenseArea();
    /**
     * <pre>
     *yujun ： 所检测的车牌的面积 
     * </pre>
     *
     * <code>optional float licenseArea = 9;</code>
     * @return The licenseArea.
     */
    float getLicenseArea();
  }
  /**
   * Protobuf type {@code apollo.plateDetection.Picture}
   */
  public static final class Picture extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:apollo.plateDetection.Picture)
      PictureOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Picture.newBuilder() to construct.
    private Picture(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Picture() {
      encoding_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new Picture();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Picture(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              height_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              width_ = input.readUInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              encoding_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              step_ = input.readUInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              data_ = input.readBytes();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              relativeAngle_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              distance_ = input.readFloat();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              positionType_ = input.readInt32();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              licenseArea_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xunjianProtos.internal_static_apollo_plateDetection_Picture_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xunjianProtos.internal_static_apollo_plateDetection_Picture_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Picture.class, Builder.class);
    }

    private int bitField0_;
    public static final int HEIGHT_FIELD_NUMBER = 1;
    private int height_;
    /**
     * <pre>
     * image height, that is, number of rows
     * </pre>
     *
     * <code>optional uint32 height = 1;</code>
     * @return Whether the height field is set.
     */
    @Override
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * image height, that is, number of rows
     * </pre>
     *
     * <code>optional uint32 height = 1;</code>
     * @return The height.
     */
    @Override
    public int getHeight() {
      return height_;
    }

    public static final int WIDTH_FIELD_NUMBER = 2;
    private int width_;
    /**
     * <pre>
     * image width, that is, number of columns
     * </pre>
     *
     * <code>optional uint32 width = 2;</code>
     * @return Whether the width field is set.
     */
    @Override
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * image width, that is, number of columns
     * </pre>
     *
     * <code>optional uint32 width = 2;</code>
     * @return The width.
     */
    @Override
    public int getWidth() {
      return width_;
    }

    public static final int ENCODING_FIELD_NUMBER = 3;
    private volatile Object encoding_;
    /**
     * <code>optional string encoding = 3;</code>
     * @return Whether the encoding field is set.
     */
    @Override
    public boolean hasEncoding() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional string encoding = 3;</code>
     * @return The encoding.
     */
    @Override
    public String getEncoding() {
      Object ref = encoding_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          encoding_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string encoding = 3;</code>
     * @return The bytes for encoding.
     */
    @Override
    public com.google.protobuf.ByteString
        getEncodingBytes() {
      Object ref = encoding_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        encoding_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STEP_FIELD_NUMBER = 4;
    private int step_;
    /**
     * <pre>
     * Full row length in bytes
     * </pre>
     *
     * <code>optional uint32 step = 4;</code>
     * @return Whether the step field is set.
     */
    @Override
    public boolean hasStep() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Full row length in bytes
     * </pre>
     *
     * <code>optional uint32 step = 4;</code>
     * @return The step.
     */
    @Override
    public int getStep() {
      return step_;
    }

    public static final int DATA_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * actual matrix data, size is (step * rows)
     * </pre>
     *
     * <code>optional bytes data = 5;</code>
     * @return Whether the data field is set.
     */
    @Override
    public boolean hasData() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * actual matrix data, size is (step * rows)
     * </pre>
     *
     * <code>optional bytes data = 5;</code>
     * @return The data.
     */
    @Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int RELATIVEANGLE_FIELD_NUMBER = 6;
    private float relativeAngle_;
    /**
     * <pre>
     *yujun  : 图像中的目标相对于巡检车的角度
     * </pre>
     *
     * <code>optional float relativeAngle = 6;</code>
     * @return Whether the relativeAngle field is set.
     */
    @Override
    public boolean hasRelativeAngle() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     *yujun  : 图像中的目标相对于巡检车的角度
     * </pre>
     *
     * <code>optional float relativeAngle = 6;</code>
     * @return The relativeAngle.
     */
    @Override
    public float getRelativeAngle() {
      return relativeAngle_;
    }

    public static final int DISTANCE_FIELD_NUMBER = 7;
    private float distance_;
    /**
     * <pre>
     *yujun  : 图像中的目标相对于巡检车的距离
     * </pre>
     *
     * <code>optional float distance = 7;</code>
     * @return Whether the distance field is set.
     */
    @Override
    public boolean hasDistance() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     *yujun  : 图像中的目标相对于巡检车的距离
     * </pre>
     *
     * <code>optional float distance = 7;</code>
     * @return The distance.
     */
    @Override
    public float getDistance() {
      return distance_;
    }

    public static final int POSITIONTYPE_FIELD_NUMBER = 8;
    private int positionType_;
    /**
     * <pre>
     *yujun  : 图像中的车牌相对于巡检车辆的位置
     * </pre>
     *
     * <code>optional int32 positionType = 8;</code>
     * @return Whether the positionType field is set.
     */
    @Override
    public boolean hasPositionType() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     *yujun  : 图像中的车牌相对于巡检车辆的位置
     * </pre>
     *
     * <code>optional int32 positionType = 8;</code>
     * @return The positionType.
     */
    @Override
    public int getPositionType() {
      return positionType_;
    }

    public static final int LICENSEAREA_FIELD_NUMBER = 9;
    private float licenseArea_;
    /**
     * <pre>
     *yujun ： 所检测的车牌的面积 
     * </pre>
     *
     * <code>optional float licenseArea = 9;</code>
     * @return Whether the licenseArea field is set.
     */
    @Override
    public boolean hasLicenseArea() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     *yujun ： 所检测的车牌的面积 
     * </pre>
     *
     * <code>optional float licenseArea = 9;</code>
     * @return The licenseArea.
     */
    @Override
    public float getLicenseArea() {
      return licenseArea_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, height_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, width_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, encoding_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(4, step_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeBytes(5, data_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeFloat(6, relativeAngle_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeFloat(7, distance_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeInt32(8, positionType_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeFloat(9, licenseArea_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, height_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, width_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, encoding_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, step_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, data_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, relativeAngle_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, distance_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, positionType_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, licenseArea_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Picture)) {
        return super.equals(obj);
      }
      Picture other = (Picture) obj;

      if (hasHeight() != other.hasHeight()) return false;
      if (hasHeight()) {
        if (getHeight()
            != other.getHeight()) return false;
      }
      if (hasWidth() != other.hasWidth()) return false;
      if (hasWidth()) {
        if (getWidth()
            != other.getWidth()) return false;
      }
      if (hasEncoding() != other.hasEncoding()) return false;
      if (hasEncoding()) {
        if (!getEncoding()
            .equals(other.getEncoding())) return false;
      }
      if (hasStep() != other.hasStep()) return false;
      if (hasStep()) {
        if (getStep()
            != other.getStep()) return false;
      }
      if (hasData() != other.hasData()) return false;
      if (hasData()) {
        if (!getData()
            .equals(other.getData())) return false;
      }
      if (hasRelativeAngle() != other.hasRelativeAngle()) return false;
      if (hasRelativeAngle()) {
        if (Float.floatToIntBits(getRelativeAngle())
            != Float.floatToIntBits(
                other.getRelativeAngle())) return false;
      }
      if (hasDistance() != other.hasDistance()) return false;
      if (hasDistance()) {
        if (Float.floatToIntBits(getDistance())
            != Float.floatToIntBits(
                other.getDistance())) return false;
      }
      if (hasPositionType() != other.hasPositionType()) return false;
      if (hasPositionType()) {
        if (getPositionType()
            != other.getPositionType()) return false;
      }
      if (hasLicenseArea() != other.hasLicenseArea()) return false;
      if (hasLicenseArea()) {
        if (Float.floatToIntBits(getLicenseArea())
            != Float.floatToIntBits(
                other.getLicenseArea())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeight()) {
        hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getHeight();
      }
      if (hasWidth()) {
        hash = (37 * hash) + WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getWidth();
      }
      if (hasEncoding()) {
        hash = (37 * hash) + ENCODING_FIELD_NUMBER;
        hash = (53 * hash) + getEncoding().hashCode();
      }
      if (hasStep()) {
        hash = (37 * hash) + STEP_FIELD_NUMBER;
        hash = (53 * hash) + getStep();
      }
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      if (hasRelativeAngle()) {
        hash = (37 * hash) + RELATIVEANGLE_FIELD_NUMBER;
        hash = (53 * hash) + Float.floatToIntBits(
            getRelativeAngle());
      }
      if (hasDistance()) {
        hash = (37 * hash) + DISTANCE_FIELD_NUMBER;
        hash = (53 * hash) + Float.floatToIntBits(
            getDistance());
      }
      if (hasPositionType()) {
        hash = (37 * hash) + POSITIONTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getPositionType();
      }
      if (hasLicenseArea()) {
        hash = (37 * hash) + LICENSEAREA_FIELD_NUMBER;
        hash = (53 * hash) + Float.floatToIntBits(
            getLicenseArea());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Picture parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Picture parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Picture parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Picture parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Picture parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Picture parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Picture parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Picture parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Picture parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Picture parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Picture parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Picture parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Picture prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code apollo.plateDetection.Picture}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:apollo.plateDetection.Picture)
        PictureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xunjianProtos.internal_static_apollo_plateDetection_Picture_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xunjianProtos.internal_static_apollo_plateDetection_Picture_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Picture.class, Builder.class);
      }

      // Construct using com.zy.tutor.xunjianProtos.Picture.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        width_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        encoding_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        step_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        relativeAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        distance_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        positionType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        licenseArea_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xunjianProtos.internal_static_apollo_plateDetection_Picture_descriptor;
      }

      @Override
      public Picture getDefaultInstanceForType() {
        return Picture.getDefaultInstance();
      }

      @Override
      public Picture build() {
        Picture result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Picture buildPartial() {
        Picture result = new Picture(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.height_ = height_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.width_ = width_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.encoding_ = encoding_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.step_ = step_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          to_bitField0_ |= 0x00000010;
        }
        result.data_ = data_;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.relativeAngle_ = relativeAngle_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.distance_ = distance_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.positionType_ = positionType_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.licenseArea_ = licenseArea_;
          to_bitField0_ |= 0x00000100;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Picture) {
          return mergeFrom((Picture)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Picture other) {
        if (other == Picture.getDefaultInstance()) return this;
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasEncoding()) {
          bitField0_ |= 0x00000004;
          encoding_ = other.encoding_;
          onChanged();
        }
        if (other.hasStep()) {
          setStep(other.getStep());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        if (other.hasRelativeAngle()) {
          setRelativeAngle(other.getRelativeAngle());
        }
        if (other.hasDistance()) {
          setDistance(other.getDistance());
        }
        if (other.hasPositionType()) {
          setPositionType(other.getPositionType());
        }
        if (other.hasLicenseArea()) {
          setLicenseArea(other.getLicenseArea());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Picture parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Picture) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int height_ ;
      /**
       * <pre>
       * image height, that is, number of rows
       * </pre>
       *
       * <code>optional uint32 height = 1;</code>
       * @return Whether the height field is set.
       */
      @Override
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * image height, that is, number of rows
       * </pre>
       *
       * <code>optional uint32 height = 1;</code>
       * @return The height.
       */
      @Override
      public int getHeight() {
        return height_;
      }
      /**
       * <pre>
       * image height, that is, number of rows
       * </pre>
       *
       * <code>optional uint32 height = 1;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000001;
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * image height, that is, number of rows
       * </pre>
       *
       * <code>optional uint32 height = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000001);
        height_ = 0;
        onChanged();
        return this;
      }

      private int width_ ;
      /**
       * <pre>
       * image width, that is, number of columns
       * </pre>
       *
       * <code>optional uint32 width = 2;</code>
       * @return Whether the width field is set.
       */
      @Override
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * image width, that is, number of columns
       * </pre>
       *
       * <code>optional uint32 width = 2;</code>
       * @return The width.
       */
      @Override
      public int getWidth() {
        return width_;
      }
      /**
       * <pre>
       * image width, that is, number of columns
       * </pre>
       *
       * <code>optional uint32 width = 2;</code>
       * @param value The width to set.
       * @return This builder for chaining.
       */
      public Builder setWidth(int value) {
        bitField0_ |= 0x00000002;
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * image width, that is, number of columns
       * </pre>
       *
       * <code>optional uint32 width = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000002);
        width_ = 0;
        onChanged();
        return this;
      }

      private Object encoding_ = "";
      /**
       * <code>optional string encoding = 3;</code>
       * @return Whether the encoding field is set.
       */
      public boolean hasEncoding() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string encoding = 3;</code>
       * @return The encoding.
       */
      public String getEncoding() {
        Object ref = encoding_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            encoding_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string encoding = 3;</code>
       * @return The bytes for encoding.
       */
      public com.google.protobuf.ByteString
          getEncodingBytes() {
        Object ref = encoding_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          encoding_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string encoding = 3;</code>
       * @param value The encoding to set.
       * @return This builder for chaining.
       */
      public Builder setEncoding(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        encoding_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string encoding = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncoding() {
        bitField0_ = (bitField0_ & ~0x00000004);
        encoding_ = getDefaultInstance().getEncoding();
        onChanged();
        return this;
      }
      /**
       * <code>optional string encoding = 3;</code>
       * @param value The bytes for encoding to set.
       * @return This builder for chaining.
       */
      public Builder setEncodingBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        encoding_ = value;
        onChanged();
        return this;
      }

      private int step_ ;
      /**
       * <pre>
       * Full row length in bytes
       * </pre>
       *
       * <code>optional uint32 step = 4;</code>
       * @return Whether the step field is set.
       */
      @Override
      public boolean hasStep() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Full row length in bytes
       * </pre>
       *
       * <code>optional uint32 step = 4;</code>
       * @return The step.
       */
      @Override
      public int getStep() {
        return step_;
      }
      /**
       * <pre>
       * Full row length in bytes
       * </pre>
       *
       * <code>optional uint32 step = 4;</code>
       * @param value The step to set.
       * @return This builder for chaining.
       */
      public Builder setStep(int value) {
        bitField0_ |= 0x00000008;
        step_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Full row length in bytes
       * </pre>
       *
       * <code>optional uint32 step = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearStep() {
        bitField0_ = (bitField0_ & ~0x00000008);
        step_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * actual matrix data, size is (step * rows)
       * </pre>
       *
       * <code>optional bytes data = 5;</code>
       * @return Whether the data field is set.
       */
      @Override
      public boolean hasData() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * actual matrix data, size is (step * rows)
       * </pre>
       *
       * <code>optional bytes data = 5;</code>
       * @return The data.
       */
      @Override
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * actual matrix data, size is (step * rows)
       * </pre>
       *
       * <code>optional bytes data = 5;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * actual matrix data, size is (step * rows)
       * </pre>
       *
       * <code>optional bytes data = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000010);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private float relativeAngle_ ;
      /**
       * <pre>
       *yujun  : 图像中的目标相对于巡检车的角度
       * </pre>
       *
       * <code>optional float relativeAngle = 6;</code>
       * @return Whether the relativeAngle field is set.
       */
      @Override
      public boolean hasRelativeAngle() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       *yujun  : 图像中的目标相对于巡检车的角度
       * </pre>
       *
       * <code>optional float relativeAngle = 6;</code>
       * @return The relativeAngle.
       */
      @Override
      public float getRelativeAngle() {
        return relativeAngle_;
      }
      /**
       * <pre>
       *yujun  : 图像中的目标相对于巡检车的角度
       * </pre>
       *
       * <code>optional float relativeAngle = 6;</code>
       * @param value The relativeAngle to set.
       * @return This builder for chaining.
       */
      public Builder setRelativeAngle(float value) {
        bitField0_ |= 0x00000020;
        relativeAngle_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *yujun  : 图像中的目标相对于巡检车的角度
       * </pre>
       *
       * <code>optional float relativeAngle = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRelativeAngle() {
        bitField0_ = (bitField0_ & ~0x00000020);
        relativeAngle_ = 0F;
        onChanged();
        return this;
      }

      private float distance_ ;
      /**
       * <pre>
       *yujun  : 图像中的目标相对于巡检车的距离
       * </pre>
       *
       * <code>optional float distance = 7;</code>
       * @return Whether the distance field is set.
       */
      @Override
      public boolean hasDistance() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       *yujun  : 图像中的目标相对于巡检车的距离
       * </pre>
       *
       * <code>optional float distance = 7;</code>
       * @return The distance.
       */
      @Override
      public float getDistance() {
        return distance_;
      }
      /**
       * <pre>
       *yujun  : 图像中的目标相对于巡检车的距离
       * </pre>
       *
       * <code>optional float distance = 7;</code>
       * @param value The distance to set.
       * @return This builder for chaining.
       */
      public Builder setDistance(float value) {
        bitField0_ |= 0x00000040;
        distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *yujun  : 图像中的目标相对于巡检车的距离
       * </pre>
       *
       * <code>optional float distance = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00000040);
        distance_ = 0F;
        onChanged();
        return this;
      }

      private int positionType_ ;
      /**
       * <pre>
       *yujun  : 图像中的车牌相对于巡检车辆的位置
       * </pre>
       *
       * <code>optional int32 positionType = 8;</code>
       * @return Whether the positionType field is set.
       */
      @Override
      public boolean hasPositionType() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       *yujun  : 图像中的车牌相对于巡检车辆的位置
       * </pre>
       *
       * <code>optional int32 positionType = 8;</code>
       * @return The positionType.
       */
      @Override
      public int getPositionType() {
        return positionType_;
      }
      /**
       * <pre>
       *yujun  : 图像中的车牌相对于巡检车辆的位置
       * </pre>
       *
       * <code>optional int32 positionType = 8;</code>
       * @param value The positionType to set.
       * @return This builder for chaining.
       */
      public Builder setPositionType(int value) {
        bitField0_ |= 0x00000080;
        positionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *yujun  : 图像中的车牌相对于巡检车辆的位置
       * </pre>
       *
       * <code>optional int32 positionType = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearPositionType() {
        bitField0_ = (bitField0_ & ~0x00000080);
        positionType_ = 0;
        onChanged();
        return this;
      }

      private float licenseArea_ ;
      /**
       * <pre>
       *yujun ： 所检测的车牌的面积 
       * </pre>
       *
       * <code>optional float licenseArea = 9;</code>
       * @return Whether the licenseArea field is set.
       */
      @Override
      public boolean hasLicenseArea() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       *yujun ： 所检测的车牌的面积 
       * </pre>
       *
       * <code>optional float licenseArea = 9;</code>
       * @return The licenseArea.
       */
      @Override
      public float getLicenseArea() {
        return licenseArea_;
      }
      /**
       * <pre>
       *yujun ： 所检测的车牌的面积 
       * </pre>
       *
       * <code>optional float licenseArea = 9;</code>
       * @param value The licenseArea to set.
       * @return This builder for chaining.
       */
      public Builder setLicenseArea(float value) {
        bitField0_ |= 0x00000100;
        licenseArea_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *yujun ： 所检测的车牌的面积 
       * </pre>
       *
       * <code>optional float licenseArea = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLicenseArea() {
        bitField0_ = (bitField0_ & ~0x00000100);
        licenseArea_ = 0F;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:apollo.plateDetection.Picture)
    }

    // @@protoc_insertion_point(class_scope:apollo.plateDetection.Picture)
    private static final Picture DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Picture();
    }

    public static Picture getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<Picture>
        PARSER = new com.google.protobuf.AbstractParser<Picture>() {
      @Override
      public Picture parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Picture(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Picture> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Picture> getParserForType() {
      return PARSER;
    }

    @Override
    public Picture getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Point2DOrBuilder extends
      // @@protoc_insertion_point(interface_extends:apollo.plateDetection.Point2D)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional double x = 1 [default = 0];</code>
     * @return Whether the x field is set.
     */
    boolean hasX();
    /**
     * <code>optional double x = 1 [default = 0];</code>
     * @return The x.
     */
    double getX();

    /**
     * <code>optional double y = 2 [default = 0];</code>
     * @return Whether the y field is set.
     */
    boolean hasY();
    /**
     * <code>optional double y = 2 [default = 0];</code>
     * @return The y.
     */
    double getY();
  }
  /**
   * Protobuf type {@code apollo.plateDetection.Point2D}
   */
  public static final class Point2D extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:apollo.plateDetection.Point2D)
      Point2DOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Point2D.newBuilder() to construct.
    private Point2D(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Point2D() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new Point2D();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Point2D(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {
              bitField0_ |= 0x00000001;
              x_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              y_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xunjianProtos.internal_static_apollo_plateDetection_Point2D_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xunjianProtos.internal_static_apollo_plateDetection_Point2D_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Point2D.class, Builder.class);
    }

    private int bitField0_;
    public static final int X_FIELD_NUMBER = 1;
    private double x_;
    /**
     * <code>optional double x = 1 [default = 0];</code>
     * @return Whether the x field is set.
     */
    @Override
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional double x = 1 [default = 0];</code>
     * @return The x.
     */
    @Override
    public double getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private double y_;
    /**
     * <code>optional double y = 2 [default = 0];</code>
     * @return Whether the y field is set.
     */
    @Override
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional double y = 2 [default = 0];</code>
     * @return The y.
     */
    @Override
    public double getY() {
      return y_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeDouble(1, x_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeDouble(2, y_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, y_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Point2D)) {
        return super.equals(obj);
      }
      Point2D other = (Point2D) obj;

      if (hasX() != other.hasX()) return false;
      if (hasX()) {
        if (Double.doubleToLongBits(getX())
            != Double.doubleToLongBits(
                other.getX())) return false;
      }
      if (hasY() != other.hasY()) return false;
      if (hasY()) {
        if (Double.doubleToLongBits(getY())
            != Double.doubleToLongBits(
                other.getY())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasX()) {
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            Double.doubleToLongBits(getX()));
      }
      if (hasY()) {
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            Double.doubleToLongBits(getY()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Point2D parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Point2D parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Point2D parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Point2D parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Point2D parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Point2D parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Point2D parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Point2D parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Point2D parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Point2D parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Point2D parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Point2D parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Point2D prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code apollo.plateDetection.Point2D}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:apollo.plateDetection.Point2D)
        Point2DOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xunjianProtos.internal_static_apollo_plateDetection_Point2D_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xunjianProtos.internal_static_apollo_plateDetection_Point2D_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Point2D.class, Builder.class);
      }

      // Construct using com.zy.tutor.xunjianProtos.Point2D.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        x_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xunjianProtos.internal_static_apollo_plateDetection_Point2D_descriptor;
      }

      @Override
      public Point2D getDefaultInstanceForType() {
        return Point2D.getDefaultInstance();
      }

      @Override
      public Point2D build() {
        Point2D result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Point2D buildPartial() {
        Point2D result = new Point2D(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.x_ = x_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.y_ = y_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Point2D) {
          return mergeFrom((Point2D)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Point2D other) {
        if (other == Point2D.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Point2D parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Point2D) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double x_ ;
      /**
       * <code>optional double x = 1 [default = 0];</code>
       * @return Whether the x field is set.
       */
      @Override
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional double x = 1 [default = 0];</code>
       * @return The x.
       */
      @Override
      public double getX() {
        return x_;
      }
      /**
       * <code>optional double x = 1 [default = 0];</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(double value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double x = 1 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0D;
        onChanged();
        return this;
      }

      private double y_ ;
      /**
       * <code>optional double y = 2 [default = 0];</code>
       * @return Whether the y field is set.
       */
      @Override
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional double y = 2 [default = 0];</code>
       * @return The y.
       */
      @Override
      public double getY() {
        return y_;
      }
      /**
       * <code>optional double y = 2 [default = 0];</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(double value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double y = 2 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0D;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:apollo.plateDetection.Point2D)
    }

    // @@protoc_insertion_point(class_scope:apollo.plateDetection.Point2D)
    private static final Point2D DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Point2D();
    }

    public static Point2D getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<Point2D>
        PARSER = new com.google.protobuf.AbstractParser<Point2D>() {
      @Override
      public Point2D parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Point2D(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Point2D> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Point2D> getParserForType() {
      return PARSER;
    }

    @Override
    public Point2D getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ParkingImageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:apollo.plateDetection.ParkingImage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string frame_id = 2;</code>
     * @return Whether the frameId field is set.
     */
    boolean hasFrameId();
    /**
     * <code>optional string frame_id = 2;</code>
     * @return The frameId.
     */
    String getFrameId();
    /**
     * <code>optional string frame_id = 2;</code>
     * @return The bytes for frameId.
     */
    com.google.protobuf.ByteString
        getFrameIdBytes();

    /**
     * <code>optional double measurement_time = 3;</code>
     * @return Whether the measurementTime field is set.
     */
    boolean hasMeasurementTime();
    /**
     * <code>optional double measurement_time = 3;</code>
     * @return The measurementTime.
     */
    double getMeasurementTime();

    /**
     * <pre>
     * image height, that is, number of rows
     * </pre>
     *
     * <code>optional uint32 height = 4;</code>
     * @return Whether the height field is set.
     */
    boolean hasHeight();
    /**
     * <pre>
     * image height, that is, number of rows
     * </pre>
     *
     * <code>optional uint32 height = 4;</code>
     * @return The height.
     */
    int getHeight();

    /**
     * <pre>
     * image width, that is, number of columns
     * </pre>
     *
     * <code>optional uint32 width = 5;</code>
     * @return Whether the width field is set.
     */
    boolean hasWidth();
    /**
     * <pre>
     * image width, that is, number of columns
     * </pre>
     *
     * <code>optional uint32 width = 5;</code>
     * @return The width.
     */
    int getWidth();

    /**
     * <code>optional string encoding = 6;</code>
     * @return Whether the encoding field is set.
     */
    boolean hasEncoding();
    /**
     * <code>optional string encoding = 6;</code>
     * @return The encoding.
     */
    String getEncoding();
    /**
     * <code>optional string encoding = 6;</code>
     * @return The bytes for encoding.
     */
    com.google.protobuf.ByteString
        getEncodingBytes();

    /**
     * <pre>
     * Full row length in bytes
     * </pre>
     *
     * <code>optional uint32 step = 7;</code>
     * @return Whether the step field is set.
     */
    boolean hasStep();
    /**
     * <pre>
     * Full row length in bytes
     * </pre>
     *
     * <code>optional uint32 step = 7;</code>
     * @return The step.
     */
    int getStep();

    /**
     * <pre>
     * actual matrix data, size is (step * rows)
     * </pre>
     *
     * <code>optional bytes data = 8;</code>
     * @return Whether the data field is set.
     */
    boolean hasData();
    /**
     * <pre>
     * actual matrix data, size is (step * rows)
     * </pre>
     *
     * <code>optional bytes data = 8;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();

    /**
     * <pre>
     *yujun ：多张照片
     * </pre>
     *
     * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
     */
    java.util.List<Picture>
        getPictureList();
    /**
     * <pre>
     *yujun ：多张照片
     * </pre>
     *
     * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
     */
    Picture getPicture(int index);
    /**
     * <pre>
     *yujun ：多张照片
     * </pre>
     *
     * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
     */
    int getPictureCount();
    /**
     * <pre>
     *yujun ：多张照片
     * </pre>
     *
     * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
     */
    java.util.List<? extends PictureOrBuilder>
        getPictureOrBuilderList();
    /**
     * <pre>
     *yujun ：多张照片
     * </pre>
     *
     * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
     */
    PictureOrBuilder getPictureOrBuilder(
            int index);

    /**
     * <pre>
     *yujun  : 图像中的车牌相对于巡检车辆的位置
     * </pre>
     *
     * <code>optional int32 positionType = 10;</code>
     * @return Whether the positionType field is set.
     */
    boolean hasPositionType();
    /**
     * <pre>
     *yujun  : 图像中的车牌相对于巡检车辆的位置
     * </pre>
     *
     * <code>optional int32 positionType = 10;</code>
     * @return The positionType.
     */
    int getPositionType();

    /**
     * <pre>
     *yujun  : 停车位id
     * </pre>
     *
     * <code>optional string parkingId = 11;</code>
     * @return Whether the parkingId field is set.
     */
    boolean hasParkingId();
    /**
     * <pre>
     *yujun  : 停车位id
     * </pre>
     *
     * <code>optional string parkingId = 11;</code>
     * @return The parkingId.
     */
    String getParkingId();
    /**
     * <pre>
     *yujun  : 停车位id
     * </pre>
     *
     * <code>optional string parkingId = 11;</code>
     * @return The bytes for parkingId.
     */
    com.google.protobuf.ByteString
        getParkingIdBytes();

    /**
     * <pre>
     * yujun: 车位坐标
     * </pre>
     *
     * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
     */
    java.util.List<Point2D>
        getPolygonPointList();
    /**
     * <pre>
     * yujun: 车位坐标
     * </pre>
     *
     * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
     */
    Point2D getPolygonPoint(int index);
    /**
     * <pre>
     * yujun: 车位坐标
     * </pre>
     *
     * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
     */
    int getPolygonPointCount();
    /**
     * <pre>
     * yujun: 车位坐标
     * </pre>
     *
     * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
     */
    java.util.List<? extends Point2DOrBuilder>
        getPolygonPointOrBuilderList();
    /**
     * <pre>
     * yujun: 车位坐标
     * </pre>
     *
     * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
     */
    Point2DOrBuilder getPolygonPointOrBuilder(
            int index);

    /**
     * <pre>
     *yujun  : 图像中的车辆相对于巡检车的角度
     * </pre>
     *
     * <code>optional float relativeAngle = 13;</code>
     * @return Whether the relativeAngle field is set.
     */
    boolean hasRelativeAngle();
    /**
     * <pre>
     *yujun  : 图像中的车辆相对于巡检车的角度
     * </pre>
     *
     * <code>optional float relativeAngle = 13;</code>
     * @return The relativeAngle.
     */
    float getRelativeAngle();

    /**
     * <pre>
     *yujun  : 图像中的车辆相对于巡检车的距离 
     * </pre>
     *
     * <code>optional float distance = 14;</code>
     * @return Whether the distance field is set.
     */
    boolean hasDistance();
    /**
     * <pre>
     *yujun  : 图像中的车辆相对于巡检车的距离 
     * </pre>
     *
     * <code>optional float distance = 14;</code>
     * @return The distance.
     */
    float getDistance();

    /**
     * <pre>
     *yujun: 停车位类型
     * </pre>
     *
     * <code>optional int32 parkingType = 15;</code>
     * @return Whether the parkingType field is set.
     */
    boolean hasParkingType();
    /**
     * <pre>
     *yujun: 停车位类型
     * </pre>
     *
     * <code>optional int32 parkingType = 15;</code>
     * @return The parkingType.
     */
    int getParkingType();

    /**
     * <pre>
     *yujjun:停车位主键ID
     * </pre>
     *
     * <code>optional string primaryID = 16;</code>
     * @return Whether the primaryID field is set.
     */
    boolean hasPrimaryID();
    /**
     * <pre>
     *yujjun:停车位主键ID
     * </pre>
     *
     * <code>optional string primaryID = 16;</code>
     * @return The primaryID.
     */
    String getPrimaryID();
    /**
     * <pre>
     *yujjun:停车位主键ID
     * </pre>
     *
     * <code>optional string primaryID = 16;</code>
     * @return The bytes for primaryID.
     */
    com.google.protobuf.ByteString
        getPrimaryIDBytes();

    /**
     * <pre>
     *yujun:停车场ID
     * </pre>
     *
     * <code>optional string parkingLotId = 17;</code>
     * @return Whether the parkingLotId field is set.
     */
    boolean hasParkingLotId();
    /**
     * <pre>
     *yujun:停车场ID
     * </pre>
     *
     * <code>optional string parkingLotId = 17;</code>
     * @return The parkingLotId.
     */
    String getParkingLotId();
    /**
     * <pre>
     *yujun:停车场ID
     * </pre>
     *
     * <code>optional string parkingLotId = 17;</code>
     * @return The bytes for parkingLotId.
     */
    com.google.protobuf.ByteString
        getParkingLotIdBytes();

    /**
     * <pre>
     *yujun: 是否需要检测车牌
     * </pre>
     *
     * <code>optional bool needDetect = 18;</code>
     * @return Whether the needDetect field is set.
     */
    boolean hasNeedDetect();
    /**
     * <pre>
     *yujun: 是否需要检测车牌
     * </pre>
     *
     * <code>optional bool needDetect = 18;</code>
     * @return The needDetect.
     */
    boolean getNeedDetect();

    /**
     * <pre>
     *yujun :车牌
     * </pre>
     *
     * <code>optional string licensePlate = 19;</code>
     * @return Whether the licensePlate field is set.
     */
    boolean hasLicensePlate();
    /**
     * <pre>
     *yujun :车牌
     * </pre>
     *
     * <code>optional string licensePlate = 19;</code>
     * @return The licensePlate.
     */
    String getLicensePlate();
    /**
     * <pre>
     *yujun :车牌
     * </pre>
     *
     * <code>optional string licensePlate = 19;</code>
     * @return The bytes for licensePlate.
     */
    com.google.protobuf.ByteString
        getLicensePlateBytes();

    /**
     * <pre>
     *fupeng
     * </pre>
     *
     * <code>optional bool obtainObstacle = 20;</code>
     * @return Whether the obtainObstacle field is set.
     */
    boolean hasObtainObstacle();
    /**
     * <pre>
     *fupeng
     * </pre>
     *
     * <code>optional bool obtainObstacle = 20;</code>
     * @return The obtainObstacle.
     */
    boolean getObtainObstacle();

    /**
     * <pre>
     *fupeng
     * </pre>
     *
     * <code>optional float recognitionConfidence = 21;</code>
     * @return Whether the recognitionConfidence field is set.
     */
    boolean hasRecognitionConfidence();
    /**
     * <pre>
     *fupeng
     * </pre>
     *
     * <code>optional float recognitionConfidence = 21;</code>
     * @return The recognitionConfidence.
     */
    float getRecognitionConfidence();

    /**
     * <pre>
     *fupeng
     * </pre>
     *
     * <code>repeated string imagesName = 22;</code>
     * @return A list containing the imagesName.
     */
    java.util.List<String>
        getImagesNameList();
    /**
     * <pre>
     *fupeng
     * </pre>
     *
     * <code>repeated string imagesName = 22;</code>
     * @return The count of imagesName.
     */
    int getImagesNameCount();
    /**
     * <pre>
     *fupeng
     * </pre>
     *
     * <code>repeated string imagesName = 22;</code>
     * @param index The index of the element to return.
     * @return The imagesName at the given index.
     */
    String getImagesName(int index);
    /**
     * <pre>
     *fupeng
     * </pre>
     *
     * <code>repeated string imagesName = 22;</code>
     * @param index The index of the value to return.
     * @return The bytes of the imagesName at the given index.
     */
    com.google.protobuf.ByteString
        getImagesNameBytes(int index);

    /**
     * <pre>
     *yujun ： 所检测的车牌的面积 
     * </pre>
     *
     * <code>optional float licenseArea = 23;</code>
     * @return Whether the licenseArea field is set.
     */
    boolean hasLicenseArea();
    /**
     * <pre>
     *yujun ： 所检测的车牌的面积 
     * </pre>
     *
     * <code>optional float licenseArea = 23;</code>
     * @return The licenseArea.
     */
    float getLicenseArea();
  }
  /**
   * Protobuf type {@code apollo.plateDetection.ParkingImage}
   */
  public static final class ParkingImage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:apollo.plateDetection.ParkingImage)
      ParkingImageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ParkingImage.newBuilder() to construct.
    private ParkingImage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ParkingImage() {
      frameId_ = "";
      encoding_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
      picture_ = java.util.Collections.emptyList();
      parkingId_ = "";
      polygonPoint_ = java.util.Collections.emptyList();
      primaryID_ = "";
      parkingLotId_ = "";
      licensePlate_ = "";
      imagesName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new ParkingImage();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ParkingImage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              frameId_ = bs;
              break;
            }
            case 25: {
              bitField0_ |= 0x00000002;
              measurementTime_ = input.readDouble();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              height_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              width_ = input.readUInt32();
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              encoding_ = bs;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              step_ = input.readUInt32();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000040;
              data_ = input.readBytes();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                picture_ = new java.util.ArrayList<Picture>();
                mutable_bitField0_ |= 0x00000080;
              }
              picture_.add(
                  input.readMessage(Picture.PARSER, extensionRegistry));
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              positionType_ = input.readInt32();
              break;
            }
            case 90: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000100;
              parkingId_ = bs;
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000400) != 0)) {
                polygonPoint_ = new java.util.ArrayList<Point2D>();
                mutable_bitField0_ |= 0x00000400;
              }
              polygonPoint_.add(
                  input.readMessage(Point2D.PARSER, extensionRegistry));
              break;
            }
            case 109: {
              bitField0_ |= 0x00000200;
              relativeAngle_ = input.readFloat();
              break;
            }
            case 117: {
              bitField0_ |= 0x00000400;
              distance_ = input.readFloat();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000800;
              parkingType_ = input.readInt32();
              break;
            }
            case 130: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00001000;
              primaryID_ = bs;
              break;
            }
            case 138: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00002000;
              parkingLotId_ = bs;
              break;
            }
            case 144: {
              bitField0_ |= 0x00004000;
              needDetect_ = input.readBool();
              break;
            }
            case 154: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00008000;
              licensePlate_ = bs;
              break;
            }
            case 160: {
              bitField0_ |= 0x00010000;
              obtainObstacle_ = input.readBool();
              break;
            }
            case 173: {
              bitField0_ |= 0x00020000;
              recognitionConfidence_ = input.readFloat();
              break;
            }
            case 178: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00100000) != 0)) {
                imagesName_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00100000;
              }
              imagesName_.add(bs);
              break;
            }
            case 189: {
              bitField0_ |= 0x00040000;
              licenseArea_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000080) != 0)) {
          picture_ = java.util.Collections.unmodifiableList(picture_);
        }
        if (((mutable_bitField0_ & 0x00000400) != 0)) {
          polygonPoint_ = java.util.Collections.unmodifiableList(polygonPoint_);
        }
        if (((mutable_bitField0_ & 0x00100000) != 0)) {
          imagesName_ = imagesName_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xunjianProtos.internal_static_apollo_plateDetection_ParkingImage_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xunjianProtos.internal_static_apollo_plateDetection_ParkingImage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ParkingImage.class, Builder.class);
    }

    private int bitField0_;
    public static final int FRAME_ID_FIELD_NUMBER = 2;
    private volatile Object frameId_;
    /**
     * <code>optional string frame_id = 2;</code>
     * @return Whether the frameId field is set.
     */
    @Override
    public boolean hasFrameId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string frame_id = 2;</code>
     * @return The frameId.
     */
    @Override
    public String getFrameId() {
      Object ref = frameId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          frameId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string frame_id = 2;</code>
     * @return The bytes for frameId.
     */
    @Override
    public com.google.protobuf.ByteString
        getFrameIdBytes() {
      Object ref = frameId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        frameId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MEASUREMENT_TIME_FIELD_NUMBER = 3;
    private double measurementTime_;
    /**
     * <code>optional double measurement_time = 3;</code>
     * @return Whether the measurementTime field is set.
     */
    @Override
    public boolean hasMeasurementTime() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional double measurement_time = 3;</code>
     * @return The measurementTime.
     */
    @Override
    public double getMeasurementTime() {
      return measurementTime_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 4;
    private int height_;
    /**
     * <pre>
     * image height, that is, number of rows
     * </pre>
     *
     * <code>optional uint32 height = 4;</code>
     * @return Whether the height field is set.
     */
    @Override
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * image height, that is, number of rows
     * </pre>
     *
     * <code>optional uint32 height = 4;</code>
     * @return The height.
     */
    @Override
    public int getHeight() {
      return height_;
    }

    public static final int WIDTH_FIELD_NUMBER = 5;
    private int width_;
    /**
     * <pre>
     * image width, that is, number of columns
     * </pre>
     *
     * <code>optional uint32 width = 5;</code>
     * @return Whether the width field is set.
     */
    @Override
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * image width, that is, number of columns
     * </pre>
     *
     * <code>optional uint32 width = 5;</code>
     * @return The width.
     */
    @Override
    public int getWidth() {
      return width_;
    }

    public static final int ENCODING_FIELD_NUMBER = 6;
    private volatile Object encoding_;
    /**
     * <code>optional string encoding = 6;</code>
     * @return Whether the encoding field is set.
     */
    @Override
    public boolean hasEncoding() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional string encoding = 6;</code>
     * @return The encoding.
     */
    @Override
    public String getEncoding() {
      Object ref = encoding_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          encoding_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string encoding = 6;</code>
     * @return The bytes for encoding.
     */
    @Override
    public com.google.protobuf.ByteString
        getEncodingBytes() {
      Object ref = encoding_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        encoding_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STEP_FIELD_NUMBER = 7;
    private int step_;
    /**
     * <pre>
     * Full row length in bytes
     * </pre>
     *
     * <code>optional uint32 step = 7;</code>
     * @return Whether the step field is set.
     */
    @Override
    public boolean hasStep() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Full row length in bytes
     * </pre>
     *
     * <code>optional uint32 step = 7;</code>
     * @return The step.
     */
    @Override
    public int getStep() {
      return step_;
    }

    public static final int DATA_FIELD_NUMBER = 8;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * actual matrix data, size is (step * rows)
     * </pre>
     *
     * <code>optional bytes data = 8;</code>
     * @return Whether the data field is set.
     */
    @Override
    public boolean hasData() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * actual matrix data, size is (step * rows)
     * </pre>
     *
     * <code>optional bytes data = 8;</code>
     * @return The data.
     */
    @Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int PICTURE_FIELD_NUMBER = 9;
    private java.util.List<Picture> picture_;
    /**
     * <pre>
     *yujun ：多张照片
     * </pre>
     *
     * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
     */
    @Override
    public java.util.List<Picture> getPictureList() {
      return picture_;
    }
    /**
     * <pre>
     *yujun ：多张照片
     * </pre>
     *
     * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
     */
    @Override
    public java.util.List<? extends PictureOrBuilder>
        getPictureOrBuilderList() {
      return picture_;
    }
    /**
     * <pre>
     *yujun ：多张照片
     * </pre>
     *
     * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
     */
    @Override
    public int getPictureCount() {
      return picture_.size();
    }
    /**
     * <pre>
     *yujun ：多张照片
     * </pre>
     *
     * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
     */
    @Override
    public Picture getPicture(int index) {
      return picture_.get(index);
    }
    /**
     * <pre>
     *yujun ：多张照片
     * </pre>
     *
     * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
     */
    @Override
    public PictureOrBuilder getPictureOrBuilder(
        int index) {
      return picture_.get(index);
    }

    public static final int POSITIONTYPE_FIELD_NUMBER = 10;
    private int positionType_;
    /**
     * <pre>
     *yujun  : 图像中的车牌相对于巡检车辆的位置
     * </pre>
     *
     * <code>optional int32 positionType = 10;</code>
     * @return Whether the positionType field is set.
     */
    @Override
    public boolean hasPositionType() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     *yujun  : 图像中的车牌相对于巡检车辆的位置
     * </pre>
     *
     * <code>optional int32 positionType = 10;</code>
     * @return The positionType.
     */
    @Override
    public int getPositionType() {
      return positionType_;
    }

    public static final int PARKINGID_FIELD_NUMBER = 11;
    private volatile Object parkingId_;
    /**
     * <pre>
     *yujun  : 停车位id
     * </pre>
     *
     * <code>optional string parkingId = 11;</code>
     * @return Whether the parkingId field is set.
     */
    @Override
    public boolean hasParkingId() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     *yujun  : 停车位id
     * </pre>
     *
     * <code>optional string parkingId = 11;</code>
     * @return The parkingId.
     */
    @Override
    public String getParkingId() {
      Object ref = parkingId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          parkingId_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *yujun  : 停车位id
     * </pre>
     *
     * <code>optional string parkingId = 11;</code>
     * @return The bytes for parkingId.
     */
    @Override
    public com.google.protobuf.ByteString
        getParkingIdBytes() {
      Object ref = parkingId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        parkingId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POLYGON_POINT_FIELD_NUMBER = 12;
    private java.util.List<Point2D> polygonPoint_;
    /**
     * <pre>
     * yujun: 车位坐标
     * </pre>
     *
     * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
     */
    @Override
    public java.util.List<Point2D> getPolygonPointList() {
      return polygonPoint_;
    }
    /**
     * <pre>
     * yujun: 车位坐标
     * </pre>
     *
     * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
     */
    @Override
    public java.util.List<? extends Point2DOrBuilder>
        getPolygonPointOrBuilderList() {
      return polygonPoint_;
    }
    /**
     * <pre>
     * yujun: 车位坐标
     * </pre>
     *
     * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
     */
    @Override
    public int getPolygonPointCount() {
      return polygonPoint_.size();
    }
    /**
     * <pre>
     * yujun: 车位坐标
     * </pre>
     *
     * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
     */
    @Override
    public Point2D getPolygonPoint(int index) {
      return polygonPoint_.get(index);
    }
    /**
     * <pre>
     * yujun: 车位坐标
     * </pre>
     *
     * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
     */
    @Override
    public Point2DOrBuilder getPolygonPointOrBuilder(
        int index) {
      return polygonPoint_.get(index);
    }

    public static final int RELATIVEANGLE_FIELD_NUMBER = 13;
    private float relativeAngle_;
    /**
     * <pre>
     *yujun  : 图像中的车辆相对于巡检车的角度
     * </pre>
     *
     * <code>optional float relativeAngle = 13;</code>
     * @return Whether the relativeAngle field is set.
     */
    @Override
    public boolean hasRelativeAngle() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     *yujun  : 图像中的车辆相对于巡检车的角度
     * </pre>
     *
     * <code>optional float relativeAngle = 13;</code>
     * @return The relativeAngle.
     */
    @Override
    public float getRelativeAngle() {
      return relativeAngle_;
    }

    public static final int DISTANCE_FIELD_NUMBER = 14;
    private float distance_;
    /**
     * <pre>
     *yujun  : 图像中的车辆相对于巡检车的距离 
     * </pre>
     *
     * <code>optional float distance = 14;</code>
     * @return Whether the distance field is set.
     */
    @Override
    public boolean hasDistance() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     *yujun  : 图像中的车辆相对于巡检车的距离 
     * </pre>
     *
     * <code>optional float distance = 14;</code>
     * @return The distance.
     */
    @Override
    public float getDistance() {
      return distance_;
    }

    public static final int PARKINGTYPE_FIELD_NUMBER = 15;
    private int parkingType_;
    /**
     * <pre>
     *yujun: 停车位类型
     * </pre>
     *
     * <code>optional int32 parkingType = 15;</code>
     * @return Whether the parkingType field is set.
     */
    @Override
    public boolean hasParkingType() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     *yujun: 停车位类型
     * </pre>
     *
     * <code>optional int32 parkingType = 15;</code>
     * @return The parkingType.
     */
    @Override
    public int getParkingType() {
      return parkingType_;
    }

    public static final int PRIMARYID_FIELD_NUMBER = 16;
    private volatile Object primaryID_;
    /**
     * <pre>
     *yujjun:停车位主键ID
     * </pre>
     *
     * <code>optional string primaryID = 16;</code>
     * @return Whether the primaryID field is set.
     */
    @Override
    public boolean hasPrimaryID() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     *yujjun:停车位主键ID
     * </pre>
     *
     * <code>optional string primaryID = 16;</code>
     * @return The primaryID.
     */
    @Override
    public String getPrimaryID() {
      Object ref = primaryID_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          primaryID_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *yujjun:停车位主键ID
     * </pre>
     *
     * <code>optional string primaryID = 16;</code>
     * @return The bytes for primaryID.
     */
    @Override
    public com.google.protobuf.ByteString
        getPrimaryIDBytes() {
      Object ref = primaryID_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        primaryID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARKINGLOTID_FIELD_NUMBER = 17;
    private volatile Object parkingLotId_;
    /**
     * <pre>
     *yujun:停车场ID
     * </pre>
     *
     * <code>optional string parkingLotId = 17;</code>
     * @return Whether the parkingLotId field is set.
     */
    @Override
    public boolean hasParkingLotId() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     *yujun:停车场ID
     * </pre>
     *
     * <code>optional string parkingLotId = 17;</code>
     * @return The parkingLotId.
     */
    @Override
    public String getParkingLotId() {
      Object ref = parkingLotId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          parkingLotId_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *yujun:停车场ID
     * </pre>
     *
     * <code>optional string parkingLotId = 17;</code>
     * @return The bytes for parkingLotId.
     */
    @Override
    public com.google.protobuf.ByteString
        getParkingLotIdBytes() {
      Object ref = parkingLotId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        parkingLotId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NEEDDETECT_FIELD_NUMBER = 18;
    private boolean needDetect_;
    /**
     * <pre>
     *yujun: 是否需要检测车牌
     * </pre>
     *
     * <code>optional bool needDetect = 18;</code>
     * @return Whether the needDetect field is set.
     */
    @Override
    public boolean hasNeedDetect() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <pre>
     *yujun: 是否需要检测车牌
     * </pre>
     *
     * <code>optional bool needDetect = 18;</code>
     * @return The needDetect.
     */
    @Override
    public boolean getNeedDetect() {
      return needDetect_;
    }

    public static final int LICENSEPLATE_FIELD_NUMBER = 19;
    private volatile Object licensePlate_;
    /**
     * <pre>
     *yujun :车牌
     * </pre>
     *
     * <code>optional string licensePlate = 19;</code>
     * @return Whether the licensePlate field is set.
     */
    @Override
    public boolean hasLicensePlate() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <pre>
     *yujun :车牌
     * </pre>
     *
     * <code>optional string licensePlate = 19;</code>
     * @return The licensePlate.
     */
    @Override
    public String getLicensePlate() {
      Object ref = licensePlate_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          licensePlate_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *yujun :车牌
     * </pre>
     *
     * <code>optional string licensePlate = 19;</code>
     * @return The bytes for licensePlate.
     */
    @Override
    public com.google.protobuf.ByteString
        getLicensePlateBytes() {
      Object ref = licensePlate_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        licensePlate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OBTAINOBSTACLE_FIELD_NUMBER = 20;
    private boolean obtainObstacle_;
    /**
     * <pre>
     *fupeng
     * </pre>
     *
     * <code>optional bool obtainObstacle = 20;</code>
     * @return Whether the obtainObstacle field is set.
     */
    @Override
    public boolean hasObtainObstacle() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <pre>
     *fupeng
     * </pre>
     *
     * <code>optional bool obtainObstacle = 20;</code>
     * @return The obtainObstacle.
     */
    @Override
    public boolean getObtainObstacle() {
      return obtainObstacle_;
    }

    public static final int RECOGNITIONCONFIDENCE_FIELD_NUMBER = 21;
    private float recognitionConfidence_;
    /**
     * <pre>
     *fupeng
     * </pre>
     *
     * <code>optional float recognitionConfidence = 21;</code>
     * @return Whether the recognitionConfidence field is set.
     */
    @Override
    public boolean hasRecognitionConfidence() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <pre>
     *fupeng
     * </pre>
     *
     * <code>optional float recognitionConfidence = 21;</code>
     * @return The recognitionConfidence.
     */
    @Override
    public float getRecognitionConfidence() {
      return recognitionConfidence_;
    }

    public static final int IMAGESNAME_FIELD_NUMBER = 22;
    private com.google.protobuf.LazyStringList imagesName_;
    /**
     * <pre>
     *fupeng
     * </pre>
     *
     * <code>repeated string imagesName = 22;</code>
     * @return A list containing the imagesName.
     */
    public com.google.protobuf.ProtocolStringList
        getImagesNameList() {
      return imagesName_;
    }
    /**
     * <pre>
     *fupeng
     * </pre>
     *
     * <code>repeated string imagesName = 22;</code>
     * @return The count of imagesName.
     */
    public int getImagesNameCount() {
      return imagesName_.size();
    }
    /**
     * <pre>
     *fupeng
     * </pre>
     *
     * <code>repeated string imagesName = 22;</code>
     * @param index The index of the element to return.
     * @return The imagesName at the given index.
     */
    public String getImagesName(int index) {
      return imagesName_.get(index);
    }
    /**
     * <pre>
     *fupeng
     * </pre>
     *
     * <code>repeated string imagesName = 22;</code>
     * @param index The index of the value to return.
     * @return The bytes of the imagesName at the given index.
     */
    public com.google.protobuf.ByteString
        getImagesNameBytes(int index) {
      return imagesName_.getByteString(index);
    }

    public static final int LICENSEAREA_FIELD_NUMBER = 23;
    private float licenseArea_;
    /**
     * <pre>
     *yujun ： 所检测的车牌的面积 
     * </pre>
     *
     * <code>optional float licenseArea = 23;</code>
     * @return Whether the licenseArea field is set.
     */
    @Override
    public boolean hasLicenseArea() {
      return ((bitField0_ & 0x00040000) != 0);
    }
    /**
     * <pre>
     *yujun ： 所检测的车牌的面积 
     * </pre>
     *
     * <code>optional float licenseArea = 23;</code>
     * @return The licenseArea.
     */
    @Override
    public float getLicenseArea() {
      return licenseArea_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, frameId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeDouble(3, measurementTime_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(4, height_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(5, width_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, encoding_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt32(7, step_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeBytes(8, data_);
      }
      for (int i = 0; i < picture_.size(); i++) {
        output.writeMessage(9, picture_.get(i));
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeInt32(10, positionType_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, parkingId_);
      }
      for (int i = 0; i < polygonPoint_.size(); i++) {
        output.writeMessage(12, polygonPoint_.get(i));
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeFloat(13, relativeAngle_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeFloat(14, distance_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeInt32(15, parkingType_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 16, primaryID_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 17, parkingLotId_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeBool(18, needDetect_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 19, licensePlate_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        output.writeBool(20, obtainObstacle_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        output.writeFloat(21, recognitionConfidence_);
      }
      for (int i = 0; i < imagesName_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 22, imagesName_.getRaw(i));
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        output.writeFloat(23, licenseArea_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, frameId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, measurementTime_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, height_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, width_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, encoding_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, step_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, data_);
      }
      for (int i = 0; i < picture_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, picture_.get(i));
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, positionType_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, parkingId_);
      }
      for (int i = 0; i < polygonPoint_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, polygonPoint_.get(i));
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, relativeAngle_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, distance_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, parkingType_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, primaryID_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(17, parkingLotId_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, needDetect_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(19, licensePlate_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(20, obtainObstacle_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(21, recognitionConfidence_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < imagesName_.size(); i++) {
          dataSize += computeStringSizeNoTag(imagesName_.getRaw(i));
        }
        size += dataSize;
        size += 2 * getImagesNameList().size();
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(23, licenseArea_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ParkingImage)) {
        return super.equals(obj);
      }
      ParkingImage other = (ParkingImage) obj;

      if (hasFrameId() != other.hasFrameId()) return false;
      if (hasFrameId()) {
        if (!getFrameId()
            .equals(other.getFrameId())) return false;
      }
      if (hasMeasurementTime() != other.hasMeasurementTime()) return false;
      if (hasMeasurementTime()) {
        if (Double.doubleToLongBits(getMeasurementTime())
            != Double.doubleToLongBits(
                other.getMeasurementTime())) return false;
      }
      if (hasHeight() != other.hasHeight()) return false;
      if (hasHeight()) {
        if (getHeight()
            != other.getHeight()) return false;
      }
      if (hasWidth() != other.hasWidth()) return false;
      if (hasWidth()) {
        if (getWidth()
            != other.getWidth()) return false;
      }
      if (hasEncoding() != other.hasEncoding()) return false;
      if (hasEncoding()) {
        if (!getEncoding()
            .equals(other.getEncoding())) return false;
      }
      if (hasStep() != other.hasStep()) return false;
      if (hasStep()) {
        if (getStep()
            != other.getStep()) return false;
      }
      if (hasData() != other.hasData()) return false;
      if (hasData()) {
        if (!getData()
            .equals(other.getData())) return false;
      }
      if (!getPictureList()
          .equals(other.getPictureList())) return false;
      if (hasPositionType() != other.hasPositionType()) return false;
      if (hasPositionType()) {
        if (getPositionType()
            != other.getPositionType()) return false;
      }
      if (hasParkingId() != other.hasParkingId()) return false;
      if (hasParkingId()) {
        if (!getParkingId()
            .equals(other.getParkingId())) return false;
      }
      if (!getPolygonPointList()
          .equals(other.getPolygonPointList())) return false;
      if (hasRelativeAngle() != other.hasRelativeAngle()) return false;
      if (hasRelativeAngle()) {
        if (Float.floatToIntBits(getRelativeAngle())
            != Float.floatToIntBits(
                other.getRelativeAngle())) return false;
      }
      if (hasDistance() != other.hasDistance()) return false;
      if (hasDistance()) {
        if (Float.floatToIntBits(getDistance())
            != Float.floatToIntBits(
                other.getDistance())) return false;
      }
      if (hasParkingType() != other.hasParkingType()) return false;
      if (hasParkingType()) {
        if (getParkingType()
            != other.getParkingType()) return false;
      }
      if (hasPrimaryID() != other.hasPrimaryID()) return false;
      if (hasPrimaryID()) {
        if (!getPrimaryID()
            .equals(other.getPrimaryID())) return false;
      }
      if (hasParkingLotId() != other.hasParkingLotId()) return false;
      if (hasParkingLotId()) {
        if (!getParkingLotId()
            .equals(other.getParkingLotId())) return false;
      }
      if (hasNeedDetect() != other.hasNeedDetect()) return false;
      if (hasNeedDetect()) {
        if (getNeedDetect()
            != other.getNeedDetect()) return false;
      }
      if (hasLicensePlate() != other.hasLicensePlate()) return false;
      if (hasLicensePlate()) {
        if (!getLicensePlate()
            .equals(other.getLicensePlate())) return false;
      }
      if (hasObtainObstacle() != other.hasObtainObstacle()) return false;
      if (hasObtainObstacle()) {
        if (getObtainObstacle()
            != other.getObtainObstacle()) return false;
      }
      if (hasRecognitionConfidence() != other.hasRecognitionConfidence()) return false;
      if (hasRecognitionConfidence()) {
        if (Float.floatToIntBits(getRecognitionConfidence())
            != Float.floatToIntBits(
                other.getRecognitionConfidence())) return false;
      }
      if (!getImagesNameList()
          .equals(other.getImagesNameList())) return false;
      if (hasLicenseArea() != other.hasLicenseArea()) return false;
      if (hasLicenseArea()) {
        if (Float.floatToIntBits(getLicenseArea())
            != Float.floatToIntBits(
                other.getLicenseArea())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFrameId()) {
        hash = (37 * hash) + FRAME_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFrameId().hashCode();
      }
      if (hasMeasurementTime()) {
        hash = (37 * hash) + MEASUREMENT_TIME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            Double.doubleToLongBits(getMeasurementTime()));
      }
      if (hasHeight()) {
        hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getHeight();
      }
      if (hasWidth()) {
        hash = (37 * hash) + WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getWidth();
      }
      if (hasEncoding()) {
        hash = (37 * hash) + ENCODING_FIELD_NUMBER;
        hash = (53 * hash) + getEncoding().hashCode();
      }
      if (hasStep()) {
        hash = (37 * hash) + STEP_FIELD_NUMBER;
        hash = (53 * hash) + getStep();
      }
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      if (getPictureCount() > 0) {
        hash = (37 * hash) + PICTURE_FIELD_NUMBER;
        hash = (53 * hash) + getPictureList().hashCode();
      }
      if (hasPositionType()) {
        hash = (37 * hash) + POSITIONTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getPositionType();
      }
      if (hasParkingId()) {
        hash = (37 * hash) + PARKINGID_FIELD_NUMBER;
        hash = (53 * hash) + getParkingId().hashCode();
      }
      if (getPolygonPointCount() > 0) {
        hash = (37 * hash) + POLYGON_POINT_FIELD_NUMBER;
        hash = (53 * hash) + getPolygonPointList().hashCode();
      }
      if (hasRelativeAngle()) {
        hash = (37 * hash) + RELATIVEANGLE_FIELD_NUMBER;
        hash = (53 * hash) + Float.floatToIntBits(
            getRelativeAngle());
      }
      if (hasDistance()) {
        hash = (37 * hash) + DISTANCE_FIELD_NUMBER;
        hash = (53 * hash) + Float.floatToIntBits(
            getDistance());
      }
      if (hasParkingType()) {
        hash = (37 * hash) + PARKINGTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getParkingType();
      }
      if (hasPrimaryID()) {
        hash = (37 * hash) + PRIMARYID_FIELD_NUMBER;
        hash = (53 * hash) + getPrimaryID().hashCode();
      }
      if (hasParkingLotId()) {
        hash = (37 * hash) + PARKINGLOTID_FIELD_NUMBER;
        hash = (53 * hash) + getParkingLotId().hashCode();
      }
      if (hasNeedDetect()) {
        hash = (37 * hash) + NEEDDETECT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getNeedDetect());
      }
      if (hasLicensePlate()) {
        hash = (37 * hash) + LICENSEPLATE_FIELD_NUMBER;
        hash = (53 * hash) + getLicensePlate().hashCode();
      }
      if (hasObtainObstacle()) {
        hash = (37 * hash) + OBTAINOBSTACLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getObtainObstacle());
      }
      if (hasRecognitionConfidence()) {
        hash = (37 * hash) + RECOGNITIONCONFIDENCE_FIELD_NUMBER;
        hash = (53 * hash) + Float.floatToIntBits(
            getRecognitionConfidence());
      }
      if (getImagesNameCount() > 0) {
        hash = (37 * hash) + IMAGESNAME_FIELD_NUMBER;
        hash = (53 * hash) + getImagesNameList().hashCode();
      }
      if (hasLicenseArea()) {
        hash = (37 * hash) + LICENSEAREA_FIELD_NUMBER;
        hash = (53 * hash) + Float.floatToIntBits(
            getLicenseArea());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ParkingImage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ParkingImage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ParkingImage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ParkingImage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ParkingImage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ParkingImage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ParkingImage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ParkingImage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ParkingImage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ParkingImage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ParkingImage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ParkingImage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ParkingImage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code apollo.plateDetection.ParkingImage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:apollo.plateDetection.ParkingImage)
        ParkingImageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xunjianProtos.internal_static_apollo_plateDetection_ParkingImage_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xunjianProtos.internal_static_apollo_plateDetection_ParkingImage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ParkingImage.class, Builder.class);
      }

      // Construct using com.zy.tutor.xunjianProtos.ParkingImage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPictureFieldBuilder();
          getPolygonPointFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        frameId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        measurementTime_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        width_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        encoding_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        step_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (pictureBuilder_ == null) {
          picture_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          pictureBuilder_.clear();
        }
        positionType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        parkingId_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        if (polygonPointBuilder_ == null) {
          polygonPoint_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          polygonPointBuilder_.clear();
        }
        relativeAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        distance_ = 0F;
        bitField0_ = (bitField0_ & ~0x00001000);
        parkingType_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        primaryID_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        parkingLotId_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        needDetect_ = false;
        bitField0_ = (bitField0_ & ~0x00010000);
        licensePlate_ = "";
        bitField0_ = (bitField0_ & ~0x00020000);
        obtainObstacle_ = false;
        bitField0_ = (bitField0_ & ~0x00040000);
        recognitionConfidence_ = 0F;
        bitField0_ = (bitField0_ & ~0x00080000);
        imagesName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00100000);
        licenseArea_ = 0F;
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xunjianProtos.internal_static_apollo_plateDetection_ParkingImage_descriptor;
      }

      @Override
      public ParkingImage getDefaultInstanceForType() {
        return ParkingImage.getDefaultInstance();
      }

      @Override
      public ParkingImage build() {
        ParkingImage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public ParkingImage buildPartial() {
        ParkingImage result = new ParkingImage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.frameId_ = frameId_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.measurementTime_ = measurementTime_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.height_ = height_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.width_ = width_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          to_bitField0_ |= 0x00000010;
        }
        result.encoding_ = encoding_;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.step_ = step_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          to_bitField0_ |= 0x00000040;
        }
        result.data_ = data_;
        if (pictureBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0)) {
            picture_ = java.util.Collections.unmodifiableList(picture_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.picture_ = picture_;
        } else {
          result.picture_ = pictureBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.positionType_ = positionType_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          to_bitField0_ |= 0x00000100;
        }
        result.parkingId_ = parkingId_;
        if (polygonPointBuilder_ == null) {
          if (((bitField0_ & 0x00000400) != 0)) {
            polygonPoint_ = java.util.Collections.unmodifiableList(polygonPoint_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.polygonPoint_ = polygonPoint_;
        } else {
          result.polygonPoint_ = polygonPointBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.relativeAngle_ = relativeAngle_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.distance_ = distance_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.parkingType_ = parkingType_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          to_bitField0_ |= 0x00001000;
        }
        result.primaryID_ = primaryID_;
        if (((from_bitField0_ & 0x00008000) != 0)) {
          to_bitField0_ |= 0x00002000;
        }
        result.parkingLotId_ = parkingLotId_;
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.needDetect_ = needDetect_;
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          to_bitField0_ |= 0x00008000;
        }
        result.licensePlate_ = licensePlate_;
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.obtainObstacle_ = obtainObstacle_;
          to_bitField0_ |= 0x00010000;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          result.recognitionConfidence_ = recognitionConfidence_;
          to_bitField0_ |= 0x00020000;
        }
        if (((bitField0_ & 0x00100000) != 0)) {
          imagesName_ = imagesName_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.imagesName_ = imagesName_;
        if (((from_bitField0_ & 0x00200000) != 0)) {
          result.licenseArea_ = licenseArea_;
          to_bitField0_ |= 0x00040000;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ParkingImage) {
          return mergeFrom((ParkingImage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ParkingImage other) {
        if (other == ParkingImage.getDefaultInstance()) return this;
        if (other.hasFrameId()) {
          bitField0_ |= 0x00000001;
          frameId_ = other.frameId_;
          onChanged();
        }
        if (other.hasMeasurementTime()) {
          setMeasurementTime(other.getMeasurementTime());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasEncoding()) {
          bitField0_ |= 0x00000010;
          encoding_ = other.encoding_;
          onChanged();
        }
        if (other.hasStep()) {
          setStep(other.getStep());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        if (pictureBuilder_ == null) {
          if (!other.picture_.isEmpty()) {
            if (picture_.isEmpty()) {
              picture_ = other.picture_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensurePictureIsMutable();
              picture_.addAll(other.picture_);
            }
            onChanged();
          }
        } else {
          if (!other.picture_.isEmpty()) {
            if (pictureBuilder_.isEmpty()) {
              pictureBuilder_.dispose();
              pictureBuilder_ = null;
              picture_ = other.picture_;
              bitField0_ = (bitField0_ & ~0x00000080);
              pictureBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPictureFieldBuilder() : null;
            } else {
              pictureBuilder_.addAllMessages(other.picture_);
            }
          }
        }
        if (other.hasPositionType()) {
          setPositionType(other.getPositionType());
        }
        if (other.hasParkingId()) {
          bitField0_ |= 0x00000200;
          parkingId_ = other.parkingId_;
          onChanged();
        }
        if (polygonPointBuilder_ == null) {
          if (!other.polygonPoint_.isEmpty()) {
            if (polygonPoint_.isEmpty()) {
              polygonPoint_ = other.polygonPoint_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensurePolygonPointIsMutable();
              polygonPoint_.addAll(other.polygonPoint_);
            }
            onChanged();
          }
        } else {
          if (!other.polygonPoint_.isEmpty()) {
            if (polygonPointBuilder_.isEmpty()) {
              polygonPointBuilder_.dispose();
              polygonPointBuilder_ = null;
              polygonPoint_ = other.polygonPoint_;
              bitField0_ = (bitField0_ & ~0x00000400);
              polygonPointBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPolygonPointFieldBuilder() : null;
            } else {
              polygonPointBuilder_.addAllMessages(other.polygonPoint_);
            }
          }
        }
        if (other.hasRelativeAngle()) {
          setRelativeAngle(other.getRelativeAngle());
        }
        if (other.hasDistance()) {
          setDistance(other.getDistance());
        }
        if (other.hasParkingType()) {
          setParkingType(other.getParkingType());
        }
        if (other.hasPrimaryID()) {
          bitField0_ |= 0x00004000;
          primaryID_ = other.primaryID_;
          onChanged();
        }
        if (other.hasParkingLotId()) {
          bitField0_ |= 0x00008000;
          parkingLotId_ = other.parkingLotId_;
          onChanged();
        }
        if (other.hasNeedDetect()) {
          setNeedDetect(other.getNeedDetect());
        }
        if (other.hasLicensePlate()) {
          bitField0_ |= 0x00020000;
          licensePlate_ = other.licensePlate_;
          onChanged();
        }
        if (other.hasObtainObstacle()) {
          setObtainObstacle(other.getObtainObstacle());
        }
        if (other.hasRecognitionConfidence()) {
          setRecognitionConfidence(other.getRecognitionConfidence());
        }
        if (!other.imagesName_.isEmpty()) {
          if (imagesName_.isEmpty()) {
            imagesName_ = other.imagesName_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensureImagesNameIsMutable();
            imagesName_.addAll(other.imagesName_);
          }
          onChanged();
        }
        if (other.hasLicenseArea()) {
          setLicenseArea(other.getLicenseArea());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ParkingImage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ParkingImage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object frameId_ = "";
      /**
       * <code>optional string frame_id = 2;</code>
       * @return Whether the frameId field is set.
       */
      public boolean hasFrameId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string frame_id = 2;</code>
       * @return The frameId.
       */
      public String getFrameId() {
        Object ref = frameId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            frameId_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string frame_id = 2;</code>
       * @return The bytes for frameId.
       */
      public com.google.protobuf.ByteString
          getFrameIdBytes() {
        Object ref = frameId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          frameId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string frame_id = 2;</code>
       * @param value The frameId to set.
       * @return This builder for chaining.
       */
      public Builder setFrameId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        frameId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string frame_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrameId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        frameId_ = getDefaultInstance().getFrameId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string frame_id = 2;</code>
       * @param value The bytes for frameId to set.
       * @return This builder for chaining.
       */
      public Builder setFrameIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        frameId_ = value;
        onChanged();
        return this;
      }

      private double measurementTime_ ;
      /**
       * <code>optional double measurement_time = 3;</code>
       * @return Whether the measurementTime field is set.
       */
      @Override
      public boolean hasMeasurementTime() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional double measurement_time = 3;</code>
       * @return The measurementTime.
       */
      @Override
      public double getMeasurementTime() {
        return measurementTime_;
      }
      /**
       * <code>optional double measurement_time = 3;</code>
       * @param value The measurementTime to set.
       * @return This builder for chaining.
       */
      public Builder setMeasurementTime(double value) {
        bitField0_ |= 0x00000002;
        measurementTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double measurement_time = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMeasurementTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        measurementTime_ = 0D;
        onChanged();
        return this;
      }

      private int height_ ;
      /**
       * <pre>
       * image height, that is, number of rows
       * </pre>
       *
       * <code>optional uint32 height = 4;</code>
       * @return Whether the height field is set.
       */
      @Override
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * image height, that is, number of rows
       * </pre>
       *
       * <code>optional uint32 height = 4;</code>
       * @return The height.
       */
      @Override
      public int getHeight() {
        return height_;
      }
      /**
       * <pre>
       * image height, that is, number of rows
       * </pre>
       *
       * <code>optional uint32 height = 4;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000004;
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * image height, that is, number of rows
       * </pre>
       *
       * <code>optional uint32 height = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000004);
        height_ = 0;
        onChanged();
        return this;
      }

      private int width_ ;
      /**
       * <pre>
       * image width, that is, number of columns
       * </pre>
       *
       * <code>optional uint32 width = 5;</code>
       * @return Whether the width field is set.
       */
      @Override
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * image width, that is, number of columns
       * </pre>
       *
       * <code>optional uint32 width = 5;</code>
       * @return The width.
       */
      @Override
      public int getWidth() {
        return width_;
      }
      /**
       * <pre>
       * image width, that is, number of columns
       * </pre>
       *
       * <code>optional uint32 width = 5;</code>
       * @param value The width to set.
       * @return This builder for chaining.
       */
      public Builder setWidth(int value) {
        bitField0_ |= 0x00000008;
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * image width, that is, number of columns
       * </pre>
       *
       * <code>optional uint32 width = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000008);
        width_ = 0;
        onChanged();
        return this;
      }

      private Object encoding_ = "";
      /**
       * <code>optional string encoding = 6;</code>
       * @return Whether the encoding field is set.
       */
      public boolean hasEncoding() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional string encoding = 6;</code>
       * @return The encoding.
       */
      public String getEncoding() {
        Object ref = encoding_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            encoding_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string encoding = 6;</code>
       * @return The bytes for encoding.
       */
      public com.google.protobuf.ByteString
          getEncodingBytes() {
        Object ref = encoding_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          encoding_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string encoding = 6;</code>
       * @param value The encoding to set.
       * @return This builder for chaining.
       */
      public Builder setEncoding(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        encoding_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string encoding = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncoding() {
        bitField0_ = (bitField0_ & ~0x00000010);
        encoding_ = getDefaultInstance().getEncoding();
        onChanged();
        return this;
      }
      /**
       * <code>optional string encoding = 6;</code>
       * @param value The bytes for encoding to set.
       * @return This builder for chaining.
       */
      public Builder setEncodingBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        encoding_ = value;
        onChanged();
        return this;
      }

      private int step_ ;
      /**
       * <pre>
       * Full row length in bytes
       * </pre>
       *
       * <code>optional uint32 step = 7;</code>
       * @return Whether the step field is set.
       */
      @Override
      public boolean hasStep() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Full row length in bytes
       * </pre>
       *
       * <code>optional uint32 step = 7;</code>
       * @return The step.
       */
      @Override
      public int getStep() {
        return step_;
      }
      /**
       * <pre>
       * Full row length in bytes
       * </pre>
       *
       * <code>optional uint32 step = 7;</code>
       * @param value The step to set.
       * @return This builder for chaining.
       */
      public Builder setStep(int value) {
        bitField0_ |= 0x00000020;
        step_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Full row length in bytes
       * </pre>
       *
       * <code>optional uint32 step = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearStep() {
        bitField0_ = (bitField0_ & ~0x00000020);
        step_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * actual matrix data, size is (step * rows)
       * </pre>
       *
       * <code>optional bytes data = 8;</code>
       * @return Whether the data field is set.
       */
      @Override
      public boolean hasData() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * actual matrix data, size is (step * rows)
       * </pre>
       *
       * <code>optional bytes data = 8;</code>
       * @return The data.
       */
      @Override
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * actual matrix data, size is (step * rows)
       * </pre>
       *
       * <code>optional bytes data = 8;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * actual matrix data, size is (step * rows)
       * </pre>
       *
       * <code>optional bytes data = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000040);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private java.util.List<Picture> picture_ =
        java.util.Collections.emptyList();
      private void ensurePictureIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          picture_ = new java.util.ArrayList<Picture>(picture_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Picture, Picture.Builder, PictureOrBuilder> pictureBuilder_;

      /**
       * <pre>
       *yujun ：多张照片
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
       */
      public java.util.List<Picture> getPictureList() {
        if (pictureBuilder_ == null) {
          return java.util.Collections.unmodifiableList(picture_);
        } else {
          return pictureBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *yujun ：多张照片
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
       */
      public int getPictureCount() {
        if (pictureBuilder_ == null) {
          return picture_.size();
        } else {
          return pictureBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *yujun ：多张照片
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
       */
      public Picture getPicture(int index) {
        if (pictureBuilder_ == null) {
          return picture_.get(index);
        } else {
          return pictureBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *yujun ：多张照片
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
       */
      public Builder setPicture(
          int index, Picture value) {
        if (pictureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePictureIsMutable();
          picture_.set(index, value);
          onChanged();
        } else {
          pictureBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *yujun ：多张照片
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
       */
      public Builder setPicture(
          int index, Picture.Builder builderForValue) {
        if (pictureBuilder_ == null) {
          ensurePictureIsMutable();
          picture_.set(index, builderForValue.build());
          onChanged();
        } else {
          pictureBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *yujun ：多张照片
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
       */
      public Builder addPicture(Picture value) {
        if (pictureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePictureIsMutable();
          picture_.add(value);
          onChanged();
        } else {
          pictureBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *yujun ：多张照片
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
       */
      public Builder addPicture(
          int index, Picture value) {
        if (pictureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePictureIsMutable();
          picture_.add(index, value);
          onChanged();
        } else {
          pictureBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *yujun ：多张照片
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
       */
      public Builder addPicture(
          Picture.Builder builderForValue) {
        if (pictureBuilder_ == null) {
          ensurePictureIsMutable();
          picture_.add(builderForValue.build());
          onChanged();
        } else {
          pictureBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *yujun ：多张照片
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
       */
      public Builder addPicture(
          int index, Picture.Builder builderForValue) {
        if (pictureBuilder_ == null) {
          ensurePictureIsMutable();
          picture_.add(index, builderForValue.build());
          onChanged();
        } else {
          pictureBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *yujun ：多张照片
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
       */
      public Builder addAllPicture(
          Iterable<? extends Picture> values) {
        if (pictureBuilder_ == null) {
          ensurePictureIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, picture_);
          onChanged();
        } else {
          pictureBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *yujun ：多张照片
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
       */
      public Builder clearPicture() {
        if (pictureBuilder_ == null) {
          picture_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          pictureBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *yujun ：多张照片
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
       */
      public Builder removePicture(int index) {
        if (pictureBuilder_ == null) {
          ensurePictureIsMutable();
          picture_.remove(index);
          onChanged();
        } else {
          pictureBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *yujun ：多张照片
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
       */
      public Picture.Builder getPictureBuilder(
          int index) {
        return getPictureFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *yujun ：多张照片
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
       */
      public PictureOrBuilder getPictureOrBuilder(
          int index) {
        if (pictureBuilder_ == null) {
          return picture_.get(index);  } else {
          return pictureBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *yujun ：多张照片
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
       */
      public java.util.List<? extends PictureOrBuilder>
           getPictureOrBuilderList() {
        if (pictureBuilder_ != null) {
          return pictureBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(picture_);
        }
      }
      /**
       * <pre>
       *yujun ：多张照片
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
       */
      public Picture.Builder addPictureBuilder() {
        return getPictureFieldBuilder().addBuilder(
            Picture.getDefaultInstance());
      }
      /**
       * <pre>
       *yujun ：多张照片
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
       */
      public Picture.Builder addPictureBuilder(
          int index) {
        return getPictureFieldBuilder().addBuilder(
            index, Picture.getDefaultInstance());
      }
      /**
       * <pre>
       *yujun ：多张照片
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Picture picture = 9;</code>
       */
      public java.util.List<Picture.Builder>
           getPictureBuilderList() {
        return getPictureFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Picture, Picture.Builder, PictureOrBuilder>
          getPictureFieldBuilder() {
        if (pictureBuilder_ == null) {
          pictureBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Picture, Picture.Builder, PictureOrBuilder>(
                  picture_,
                  ((bitField0_ & 0x00000080) != 0),
                  getParentForChildren(),
                  isClean());
          picture_ = null;
        }
        return pictureBuilder_;
      }

      private int positionType_ ;
      /**
       * <pre>
       *yujun  : 图像中的车牌相对于巡检车辆的位置
       * </pre>
       *
       * <code>optional int32 positionType = 10;</code>
       * @return Whether the positionType field is set.
       */
      @Override
      public boolean hasPositionType() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       *yujun  : 图像中的车牌相对于巡检车辆的位置
       * </pre>
       *
       * <code>optional int32 positionType = 10;</code>
       * @return The positionType.
       */
      @Override
      public int getPositionType() {
        return positionType_;
      }
      /**
       * <pre>
       *yujun  : 图像中的车牌相对于巡检车辆的位置
       * </pre>
       *
       * <code>optional int32 positionType = 10;</code>
       * @param value The positionType to set.
       * @return This builder for chaining.
       */
      public Builder setPositionType(int value) {
        bitField0_ |= 0x00000100;
        positionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *yujun  : 图像中的车牌相对于巡检车辆的位置
       * </pre>
       *
       * <code>optional int32 positionType = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearPositionType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        positionType_ = 0;
        onChanged();
        return this;
      }

      private Object parkingId_ = "";
      /**
       * <pre>
       *yujun  : 停车位id
       * </pre>
       *
       * <code>optional string parkingId = 11;</code>
       * @return Whether the parkingId field is set.
       */
      public boolean hasParkingId() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       *yujun  : 停车位id
       * </pre>
       *
       * <code>optional string parkingId = 11;</code>
       * @return The parkingId.
       */
      public String getParkingId() {
        Object ref = parkingId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            parkingId_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *yujun  : 停车位id
       * </pre>
       *
       * <code>optional string parkingId = 11;</code>
       * @return The bytes for parkingId.
       */
      public com.google.protobuf.ByteString
          getParkingIdBytes() {
        Object ref = parkingId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          parkingId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *yujun  : 停车位id
       * </pre>
       *
       * <code>optional string parkingId = 11;</code>
       * @param value The parkingId to set.
       * @return This builder for chaining.
       */
      public Builder setParkingId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        parkingId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *yujun  : 停车位id
       * </pre>
       *
       * <code>optional string parkingId = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearParkingId() {
        bitField0_ = (bitField0_ & ~0x00000200);
        parkingId_ = getDefaultInstance().getParkingId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *yujun  : 停车位id
       * </pre>
       *
       * <code>optional string parkingId = 11;</code>
       * @param value The bytes for parkingId to set.
       * @return This builder for chaining.
       */
      public Builder setParkingIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        parkingId_ = value;
        onChanged();
        return this;
      }

      private java.util.List<Point2D> polygonPoint_ =
        java.util.Collections.emptyList();
      private void ensurePolygonPointIsMutable() {
        if (!((bitField0_ & 0x00000400) != 0)) {
          polygonPoint_ = new java.util.ArrayList<Point2D>(polygonPoint_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Point2D, Point2D.Builder, Point2DOrBuilder> polygonPointBuilder_;

      /**
       * <pre>
       * yujun: 车位坐标
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
       */
      public java.util.List<Point2D> getPolygonPointList() {
        if (polygonPointBuilder_ == null) {
          return java.util.Collections.unmodifiableList(polygonPoint_);
        } else {
          return polygonPointBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * yujun: 车位坐标
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
       */
      public int getPolygonPointCount() {
        if (polygonPointBuilder_ == null) {
          return polygonPoint_.size();
        } else {
          return polygonPointBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * yujun: 车位坐标
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
       */
      public Point2D getPolygonPoint(int index) {
        if (polygonPointBuilder_ == null) {
          return polygonPoint_.get(index);
        } else {
          return polygonPointBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * yujun: 车位坐标
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
       */
      public Builder setPolygonPoint(
          int index, Point2D value) {
        if (polygonPointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePolygonPointIsMutable();
          polygonPoint_.set(index, value);
          onChanged();
        } else {
          polygonPointBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * yujun: 车位坐标
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
       */
      public Builder setPolygonPoint(
          int index, Point2D.Builder builderForValue) {
        if (polygonPointBuilder_ == null) {
          ensurePolygonPointIsMutable();
          polygonPoint_.set(index, builderForValue.build());
          onChanged();
        } else {
          polygonPointBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * yujun: 车位坐标
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
       */
      public Builder addPolygonPoint(Point2D value) {
        if (polygonPointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePolygonPointIsMutable();
          polygonPoint_.add(value);
          onChanged();
        } else {
          polygonPointBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * yujun: 车位坐标
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
       */
      public Builder addPolygonPoint(
          int index, Point2D value) {
        if (polygonPointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePolygonPointIsMutable();
          polygonPoint_.add(index, value);
          onChanged();
        } else {
          polygonPointBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * yujun: 车位坐标
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
       */
      public Builder addPolygonPoint(
          Point2D.Builder builderForValue) {
        if (polygonPointBuilder_ == null) {
          ensurePolygonPointIsMutable();
          polygonPoint_.add(builderForValue.build());
          onChanged();
        } else {
          polygonPointBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * yujun: 车位坐标
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
       */
      public Builder addPolygonPoint(
          int index, Point2D.Builder builderForValue) {
        if (polygonPointBuilder_ == null) {
          ensurePolygonPointIsMutable();
          polygonPoint_.add(index, builderForValue.build());
          onChanged();
        } else {
          polygonPointBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * yujun: 车位坐标
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
       */
      public Builder addAllPolygonPoint(
          Iterable<? extends Point2D> values) {
        if (polygonPointBuilder_ == null) {
          ensurePolygonPointIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, polygonPoint_);
          onChanged();
        } else {
          polygonPointBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * yujun: 车位坐标
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
       */
      public Builder clearPolygonPoint() {
        if (polygonPointBuilder_ == null) {
          polygonPoint_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          polygonPointBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * yujun: 车位坐标
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
       */
      public Builder removePolygonPoint(int index) {
        if (polygonPointBuilder_ == null) {
          ensurePolygonPointIsMutable();
          polygonPoint_.remove(index);
          onChanged();
        } else {
          polygonPointBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * yujun: 车位坐标
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
       */
      public Point2D.Builder getPolygonPointBuilder(
          int index) {
        return getPolygonPointFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * yujun: 车位坐标
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
       */
      public Point2DOrBuilder getPolygonPointOrBuilder(
          int index) {
        if (polygonPointBuilder_ == null) {
          return polygonPoint_.get(index);  } else {
          return polygonPointBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * yujun: 车位坐标
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
       */
      public java.util.List<? extends Point2DOrBuilder>
           getPolygonPointOrBuilderList() {
        if (polygonPointBuilder_ != null) {
          return polygonPointBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(polygonPoint_);
        }
      }
      /**
       * <pre>
       * yujun: 车位坐标
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
       */
      public Point2D.Builder addPolygonPointBuilder() {
        return getPolygonPointFieldBuilder().addBuilder(
            Point2D.getDefaultInstance());
      }
      /**
       * <pre>
       * yujun: 车位坐标
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
       */
      public Point2D.Builder addPolygonPointBuilder(
          int index) {
        return getPolygonPointFieldBuilder().addBuilder(
            index, Point2D.getDefaultInstance());
      }
      /**
       * <pre>
       * yujun: 车位坐标
       * </pre>
       *
       * <code>repeated .apollo.plateDetection.Point2D polygon_point = 12;</code>
       */
      public java.util.List<Point2D.Builder>
           getPolygonPointBuilderList() {
        return getPolygonPointFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Point2D, Point2D.Builder, Point2DOrBuilder>
          getPolygonPointFieldBuilder() {
        if (polygonPointBuilder_ == null) {
          polygonPointBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Point2D, Point2D.Builder, Point2DOrBuilder>(
                  polygonPoint_,
                  ((bitField0_ & 0x00000400) != 0),
                  getParentForChildren(),
                  isClean());
          polygonPoint_ = null;
        }
        return polygonPointBuilder_;
      }

      private float relativeAngle_ ;
      /**
       * <pre>
       *yujun  : 图像中的车辆相对于巡检车的角度
       * </pre>
       *
       * <code>optional float relativeAngle = 13;</code>
       * @return Whether the relativeAngle field is set.
       */
      @Override
      public boolean hasRelativeAngle() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       *yujun  : 图像中的车辆相对于巡检车的角度
       * </pre>
       *
       * <code>optional float relativeAngle = 13;</code>
       * @return The relativeAngle.
       */
      @Override
      public float getRelativeAngle() {
        return relativeAngle_;
      }
      /**
       * <pre>
       *yujun  : 图像中的车辆相对于巡检车的角度
       * </pre>
       *
       * <code>optional float relativeAngle = 13;</code>
       * @param value The relativeAngle to set.
       * @return This builder for chaining.
       */
      public Builder setRelativeAngle(float value) {
        bitField0_ |= 0x00000800;
        relativeAngle_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *yujun  : 图像中的车辆相对于巡检车的角度
       * </pre>
       *
       * <code>optional float relativeAngle = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearRelativeAngle() {
        bitField0_ = (bitField0_ & ~0x00000800);
        relativeAngle_ = 0F;
        onChanged();
        return this;
      }

      private float distance_ ;
      /**
       * <pre>
       *yujun  : 图像中的车辆相对于巡检车的距离 
       * </pre>
       *
       * <code>optional float distance = 14;</code>
       * @return Whether the distance field is set.
       */
      @Override
      public boolean hasDistance() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <pre>
       *yujun  : 图像中的车辆相对于巡检车的距离 
       * </pre>
       *
       * <code>optional float distance = 14;</code>
       * @return The distance.
       */
      @Override
      public float getDistance() {
        return distance_;
      }
      /**
       * <pre>
       *yujun  : 图像中的车辆相对于巡检车的距离 
       * </pre>
       *
       * <code>optional float distance = 14;</code>
       * @param value The distance to set.
       * @return This builder for chaining.
       */
      public Builder setDistance(float value) {
        bitField0_ |= 0x00001000;
        distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *yujun  : 图像中的车辆相对于巡检车的距离 
       * </pre>
       *
       * <code>optional float distance = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00001000);
        distance_ = 0F;
        onChanged();
        return this;
      }

      private int parkingType_ ;
      /**
       * <pre>
       *yujun: 停车位类型
       * </pre>
       *
       * <code>optional int32 parkingType = 15;</code>
       * @return Whether the parkingType field is set.
       */
      @Override
      public boolean hasParkingType() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <pre>
       *yujun: 停车位类型
       * </pre>
       *
       * <code>optional int32 parkingType = 15;</code>
       * @return The parkingType.
       */
      @Override
      public int getParkingType() {
        return parkingType_;
      }
      /**
       * <pre>
       *yujun: 停车位类型
       * </pre>
       *
       * <code>optional int32 parkingType = 15;</code>
       * @param value The parkingType to set.
       * @return This builder for chaining.
       */
      public Builder setParkingType(int value) {
        bitField0_ |= 0x00002000;
        parkingType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *yujun: 停车位类型
       * </pre>
       *
       * <code>optional int32 parkingType = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearParkingType() {
        bitField0_ = (bitField0_ & ~0x00002000);
        parkingType_ = 0;
        onChanged();
        return this;
      }

      private Object primaryID_ = "";
      /**
       * <pre>
       *yujjun:停车位主键ID
       * </pre>
       *
       * <code>optional string primaryID = 16;</code>
       * @return Whether the primaryID field is set.
       */
      public boolean hasPrimaryID() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <pre>
       *yujjun:停车位主键ID
       * </pre>
       *
       * <code>optional string primaryID = 16;</code>
       * @return The primaryID.
       */
      public String getPrimaryID() {
        Object ref = primaryID_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            primaryID_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *yujjun:停车位主键ID
       * </pre>
       *
       * <code>optional string primaryID = 16;</code>
       * @return The bytes for primaryID.
       */
      public com.google.protobuf.ByteString
          getPrimaryIDBytes() {
        Object ref = primaryID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          primaryID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *yujjun:停车位主键ID
       * </pre>
       *
       * <code>optional string primaryID = 16;</code>
       * @param value The primaryID to set.
       * @return This builder for chaining.
       */
      public Builder setPrimaryID(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        primaryID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *yujjun:停车位主键ID
       * </pre>
       *
       * <code>optional string primaryID = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrimaryID() {
        bitField0_ = (bitField0_ & ~0x00004000);
        primaryID_ = getDefaultInstance().getPrimaryID();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *yujjun:停车位主键ID
       * </pre>
       *
       * <code>optional string primaryID = 16;</code>
       * @param value The bytes for primaryID to set.
       * @return This builder for chaining.
       */
      public Builder setPrimaryIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        primaryID_ = value;
        onChanged();
        return this;
      }

      private Object parkingLotId_ = "";
      /**
       * <pre>
       *yujun:停车场ID
       * </pre>
       *
       * <code>optional string parkingLotId = 17;</code>
       * @return Whether the parkingLotId field is set.
       */
      public boolean hasParkingLotId() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <pre>
       *yujun:停车场ID
       * </pre>
       *
       * <code>optional string parkingLotId = 17;</code>
       * @return The parkingLotId.
       */
      public String getParkingLotId() {
        Object ref = parkingLotId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            parkingLotId_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *yujun:停车场ID
       * </pre>
       *
       * <code>optional string parkingLotId = 17;</code>
       * @return The bytes for parkingLotId.
       */
      public com.google.protobuf.ByteString
          getParkingLotIdBytes() {
        Object ref = parkingLotId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          parkingLotId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *yujun:停车场ID
       * </pre>
       *
       * <code>optional string parkingLotId = 17;</code>
       * @param value The parkingLotId to set.
       * @return This builder for chaining.
       */
      public Builder setParkingLotId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        parkingLotId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *yujun:停车场ID
       * </pre>
       *
       * <code>optional string parkingLotId = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearParkingLotId() {
        bitField0_ = (bitField0_ & ~0x00008000);
        parkingLotId_ = getDefaultInstance().getParkingLotId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *yujun:停车场ID
       * </pre>
       *
       * <code>optional string parkingLotId = 17;</code>
       * @param value The bytes for parkingLotId to set.
       * @return This builder for chaining.
       */
      public Builder setParkingLotIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        parkingLotId_ = value;
        onChanged();
        return this;
      }

      private boolean needDetect_ ;
      /**
       * <pre>
       *yujun: 是否需要检测车牌
       * </pre>
       *
       * <code>optional bool needDetect = 18;</code>
       * @return Whether the needDetect field is set.
       */
      @Override
      public boolean hasNeedDetect() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <pre>
       *yujun: 是否需要检测车牌
       * </pre>
       *
       * <code>optional bool needDetect = 18;</code>
       * @return The needDetect.
       */
      @Override
      public boolean getNeedDetect() {
        return needDetect_;
      }
      /**
       * <pre>
       *yujun: 是否需要检测车牌
       * </pre>
       *
       * <code>optional bool needDetect = 18;</code>
       * @param value The needDetect to set.
       * @return This builder for chaining.
       */
      public Builder setNeedDetect(boolean value) {
        bitField0_ |= 0x00010000;
        needDetect_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *yujun: 是否需要检测车牌
       * </pre>
       *
       * <code>optional bool needDetect = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearNeedDetect() {
        bitField0_ = (bitField0_ & ~0x00010000);
        needDetect_ = false;
        onChanged();
        return this;
      }

      private Object licensePlate_ = "";
      /**
       * <pre>
       *yujun :车牌
       * </pre>
       *
       * <code>optional string licensePlate = 19;</code>
       * @return Whether the licensePlate field is set.
       */
      public boolean hasLicensePlate() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <pre>
       *yujun :车牌
       * </pre>
       *
       * <code>optional string licensePlate = 19;</code>
       * @return The licensePlate.
       */
      public String getLicensePlate() {
        Object ref = licensePlate_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            licensePlate_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *yujun :车牌
       * </pre>
       *
       * <code>optional string licensePlate = 19;</code>
       * @return The bytes for licensePlate.
       */
      public com.google.protobuf.ByteString
          getLicensePlateBytes() {
        Object ref = licensePlate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          licensePlate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *yujun :车牌
       * </pre>
       *
       * <code>optional string licensePlate = 19;</code>
       * @param value The licensePlate to set.
       * @return This builder for chaining.
       */
      public Builder setLicensePlate(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
        licensePlate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *yujun :车牌
       * </pre>
       *
       * <code>optional string licensePlate = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearLicensePlate() {
        bitField0_ = (bitField0_ & ~0x00020000);
        licensePlate_ = getDefaultInstance().getLicensePlate();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *yujun :车牌
       * </pre>
       *
       * <code>optional string licensePlate = 19;</code>
       * @param value The bytes for licensePlate to set.
       * @return This builder for chaining.
       */
      public Builder setLicensePlateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
        licensePlate_ = value;
        onChanged();
        return this;
      }

      private boolean obtainObstacle_ ;
      /**
       * <pre>
       *fupeng
       * </pre>
       *
       * <code>optional bool obtainObstacle = 20;</code>
       * @return Whether the obtainObstacle field is set.
       */
      @Override
      public boolean hasObtainObstacle() {
        return ((bitField0_ & 0x00040000) != 0);
      }
      /**
       * <pre>
       *fupeng
       * </pre>
       *
       * <code>optional bool obtainObstacle = 20;</code>
       * @return The obtainObstacle.
       */
      @Override
      public boolean getObtainObstacle() {
        return obtainObstacle_;
      }
      /**
       * <pre>
       *fupeng
       * </pre>
       *
       * <code>optional bool obtainObstacle = 20;</code>
       * @param value The obtainObstacle to set.
       * @return This builder for chaining.
       */
      public Builder setObtainObstacle(boolean value) {
        bitField0_ |= 0x00040000;
        obtainObstacle_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *fupeng
       * </pre>
       *
       * <code>optional bool obtainObstacle = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearObtainObstacle() {
        bitField0_ = (bitField0_ & ~0x00040000);
        obtainObstacle_ = false;
        onChanged();
        return this;
      }

      private float recognitionConfidence_ ;
      /**
       * <pre>
       *fupeng
       * </pre>
       *
       * <code>optional float recognitionConfidence = 21;</code>
       * @return Whether the recognitionConfidence field is set.
       */
      @Override
      public boolean hasRecognitionConfidence() {
        return ((bitField0_ & 0x00080000) != 0);
      }
      /**
       * <pre>
       *fupeng
       * </pre>
       *
       * <code>optional float recognitionConfidence = 21;</code>
       * @return The recognitionConfidence.
       */
      @Override
      public float getRecognitionConfidence() {
        return recognitionConfidence_;
      }
      /**
       * <pre>
       *fupeng
       * </pre>
       *
       * <code>optional float recognitionConfidence = 21;</code>
       * @param value The recognitionConfidence to set.
       * @return This builder for chaining.
       */
      public Builder setRecognitionConfidence(float value) {
        bitField0_ |= 0x00080000;
        recognitionConfidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *fupeng
       * </pre>
       *
       * <code>optional float recognitionConfidence = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearRecognitionConfidence() {
        bitField0_ = (bitField0_ & ~0x00080000);
        recognitionConfidence_ = 0F;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList imagesName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureImagesNameIsMutable() {
        if (!((bitField0_ & 0x00100000) != 0)) {
          imagesName_ = new com.google.protobuf.LazyStringArrayList(imagesName_);
          bitField0_ |= 0x00100000;
         }
      }
      /**
       * <pre>
       *fupeng
       * </pre>
       *
       * <code>repeated string imagesName = 22;</code>
       * @return A list containing the imagesName.
       */
      public com.google.protobuf.ProtocolStringList
          getImagesNameList() {
        return imagesName_.getUnmodifiableView();
      }
      /**
       * <pre>
       *fupeng
       * </pre>
       *
       * <code>repeated string imagesName = 22;</code>
       * @return The count of imagesName.
       */
      public int getImagesNameCount() {
        return imagesName_.size();
      }
      /**
       * <pre>
       *fupeng
       * </pre>
       *
       * <code>repeated string imagesName = 22;</code>
       * @param index The index of the element to return.
       * @return The imagesName at the given index.
       */
      public String getImagesName(int index) {
        return imagesName_.get(index);
      }
      /**
       * <pre>
       *fupeng
       * </pre>
       *
       * <code>repeated string imagesName = 22;</code>
       * @param index The index of the value to return.
       * @return The bytes of the imagesName at the given index.
       */
      public com.google.protobuf.ByteString
          getImagesNameBytes(int index) {
        return imagesName_.getByteString(index);
      }
      /**
       * <pre>
       *fupeng
       * </pre>
       *
       * <code>repeated string imagesName = 22;</code>
       * @param index The index to set the value at.
       * @param value The imagesName to set.
       * @return This builder for chaining.
       */
      public Builder setImagesName(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureImagesNameIsMutable();
        imagesName_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *fupeng
       * </pre>
       *
       * <code>repeated string imagesName = 22;</code>
       * @param value The imagesName to add.
       * @return This builder for chaining.
       */
      public Builder addImagesName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureImagesNameIsMutable();
        imagesName_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *fupeng
       * </pre>
       *
       * <code>repeated string imagesName = 22;</code>
       * @param values The imagesName to add.
       * @return This builder for chaining.
       */
      public Builder addAllImagesName(
          Iterable<String> values) {
        ensureImagesNameIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, imagesName_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *fupeng
       * </pre>
       *
       * <code>repeated string imagesName = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearImagesName() {
        imagesName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *fupeng
       * </pre>
       *
       * <code>repeated string imagesName = 22;</code>
       * @param value The bytes of the imagesName to add.
       * @return This builder for chaining.
       */
      public Builder addImagesNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureImagesNameIsMutable();
        imagesName_.add(value);
        onChanged();
        return this;
      }

      private float licenseArea_ ;
      /**
       * <pre>
       *yujun ： 所检测的车牌的面积 
       * </pre>
       *
       * <code>optional float licenseArea = 23;</code>
       * @return Whether the licenseArea field is set.
       */
      @Override
      public boolean hasLicenseArea() {
        return ((bitField0_ & 0x00200000) != 0);
      }
      /**
       * <pre>
       *yujun ： 所检测的车牌的面积 
       * </pre>
       *
       * <code>optional float licenseArea = 23;</code>
       * @return The licenseArea.
       */
      @Override
      public float getLicenseArea() {
        return licenseArea_;
      }
      /**
       * <pre>
       *yujun ： 所检测的车牌的面积 
       * </pre>
       *
       * <code>optional float licenseArea = 23;</code>
       * @param value The licenseArea to set.
       * @return This builder for chaining.
       */
      public Builder setLicenseArea(float value) {
        bitField0_ |= 0x00200000;
        licenseArea_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *yujun ： 所检测的车牌的面积 
       * </pre>
       *
       * <code>optional float licenseArea = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearLicenseArea() {
        bitField0_ = (bitField0_ & ~0x00200000);
        licenseArea_ = 0F;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:apollo.plateDetection.ParkingImage)
    }

    // @@protoc_insertion_point(class_scope:apollo.plateDetection.ParkingImage)
    private static final ParkingImage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ParkingImage();
    }

    public static ParkingImage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<ParkingImage>
        PARSER = new com.google.protobuf.AbstractParser<ParkingImage>() {
      @Override
      public ParkingImage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ParkingImage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ParkingImage> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ParkingImage> getParserForType() {
      return PARSER;
    }

    @Override
    public ParkingImage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ParkingPubOrBuilder extends
      // @@protoc_insertion_point(interface_extends:apollo.plateDetection.ParkingPub)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
     */
    java.util.List<ParkingImage>
        getParkingmsgList();
    /**
     * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
     */
    ParkingImage getParkingmsg(int index);
    /**
     * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
     */
    int getParkingmsgCount();
    /**
     * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
     */
    java.util.List<? extends ParkingImageOrBuilder>
        getParkingmsgOrBuilderList();
    /**
     * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
     */
    ParkingImageOrBuilder getParkingmsgOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code apollo.plateDetection.ParkingPub}
   */
  public static final class ParkingPub extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:apollo.plateDetection.ParkingPub)
      ParkingPubOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ParkingPub.newBuilder() to construct.
    private ParkingPub(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ParkingPub() {
      parkingmsg_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new ParkingPub();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ParkingPub(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                parkingmsg_ = new java.util.ArrayList<ParkingImage>();
                mutable_bitField0_ |= 0x00000001;
              }
              parkingmsg_.add(
                  input.readMessage(ParkingImage.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          parkingmsg_ = java.util.Collections.unmodifiableList(parkingmsg_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xunjianProtos.internal_static_apollo_plateDetection_ParkingPub_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xunjianProtos.internal_static_apollo_plateDetection_ParkingPub_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ParkingPub.class, Builder.class);
    }

    public static final int PARKINGMSG_FIELD_NUMBER = 1;
    private java.util.List<ParkingImage> parkingmsg_;
    /**
     * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
     */
    @Override
    public java.util.List<ParkingImage> getParkingmsgList() {
      return parkingmsg_;
    }
    /**
     * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
     */
    @Override
    public java.util.List<? extends ParkingImageOrBuilder>
        getParkingmsgOrBuilderList() {
      return parkingmsg_;
    }
    /**
     * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
     */
    @Override
    public int getParkingmsgCount() {
      return parkingmsg_.size();
    }
    /**
     * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
     */
    @Override
    public ParkingImage getParkingmsg(int index) {
      return parkingmsg_.get(index);
    }
    /**
     * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
     */
    @Override
    public ParkingImageOrBuilder getParkingmsgOrBuilder(
        int index) {
      return parkingmsg_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < parkingmsg_.size(); i++) {
        output.writeMessage(1, parkingmsg_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < parkingmsg_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, parkingmsg_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ParkingPub)) {
        return super.equals(obj);
      }
      ParkingPub other = (ParkingPub) obj;

      if (!getParkingmsgList()
          .equals(other.getParkingmsgList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getParkingmsgCount() > 0) {
        hash = (37 * hash) + PARKINGMSG_FIELD_NUMBER;
        hash = (53 * hash) + getParkingmsgList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ParkingPub parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ParkingPub parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ParkingPub parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ParkingPub parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ParkingPub parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ParkingPub parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ParkingPub parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ParkingPub parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ParkingPub parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ParkingPub parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ParkingPub parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ParkingPub parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ParkingPub prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code apollo.plateDetection.ParkingPub}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:apollo.plateDetection.ParkingPub)
        ParkingPubOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xunjianProtos.internal_static_apollo_plateDetection_ParkingPub_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xunjianProtos.internal_static_apollo_plateDetection_ParkingPub_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ParkingPub.class, Builder.class);
      }

      // Construct using com.zy.tutor.xunjianProtos.ParkingPub.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getParkingmsgFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (parkingmsgBuilder_ == null) {
          parkingmsg_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          parkingmsgBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xunjianProtos.internal_static_apollo_plateDetection_ParkingPub_descriptor;
      }

      @Override
      public ParkingPub getDefaultInstanceForType() {
        return ParkingPub.getDefaultInstance();
      }

      @Override
      public ParkingPub build() {
        ParkingPub result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public ParkingPub buildPartial() {
        ParkingPub result = new ParkingPub(this);
        int from_bitField0_ = bitField0_;
        if (parkingmsgBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            parkingmsg_ = java.util.Collections.unmodifiableList(parkingmsg_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.parkingmsg_ = parkingmsg_;
        } else {
          result.parkingmsg_ = parkingmsgBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ParkingPub) {
          return mergeFrom((ParkingPub)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ParkingPub other) {
        if (other == ParkingPub.getDefaultInstance()) return this;
        if (parkingmsgBuilder_ == null) {
          if (!other.parkingmsg_.isEmpty()) {
            if (parkingmsg_.isEmpty()) {
              parkingmsg_ = other.parkingmsg_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureParkingmsgIsMutable();
              parkingmsg_.addAll(other.parkingmsg_);
            }
            onChanged();
          }
        } else {
          if (!other.parkingmsg_.isEmpty()) {
            if (parkingmsgBuilder_.isEmpty()) {
              parkingmsgBuilder_.dispose();
              parkingmsgBuilder_ = null;
              parkingmsg_ = other.parkingmsg_;
              bitField0_ = (bitField0_ & ~0x00000001);
              parkingmsgBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getParkingmsgFieldBuilder() : null;
            } else {
              parkingmsgBuilder_.addAllMessages(other.parkingmsg_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ParkingPub parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ParkingPub) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<ParkingImage> parkingmsg_ =
        java.util.Collections.emptyList();
      private void ensureParkingmsgIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          parkingmsg_ = new java.util.ArrayList<ParkingImage>(parkingmsg_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          ParkingImage, ParkingImage.Builder, ParkingImageOrBuilder> parkingmsgBuilder_;

      /**
       * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
       */
      public java.util.List<ParkingImage> getParkingmsgList() {
        if (parkingmsgBuilder_ == null) {
          return java.util.Collections.unmodifiableList(parkingmsg_);
        } else {
          return parkingmsgBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
       */
      public int getParkingmsgCount() {
        if (parkingmsgBuilder_ == null) {
          return parkingmsg_.size();
        } else {
          return parkingmsgBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
       */
      public ParkingImage getParkingmsg(int index) {
        if (parkingmsgBuilder_ == null) {
          return parkingmsg_.get(index);
        } else {
          return parkingmsgBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
       */
      public Builder setParkingmsg(
          int index, ParkingImage value) {
        if (parkingmsgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParkingmsgIsMutable();
          parkingmsg_.set(index, value);
          onChanged();
        } else {
          parkingmsgBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
       */
      public Builder setParkingmsg(
          int index, ParkingImage.Builder builderForValue) {
        if (parkingmsgBuilder_ == null) {
          ensureParkingmsgIsMutable();
          parkingmsg_.set(index, builderForValue.build());
          onChanged();
        } else {
          parkingmsgBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
       */
      public Builder addParkingmsg(ParkingImage value) {
        if (parkingmsgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParkingmsgIsMutable();
          parkingmsg_.add(value);
          onChanged();
        } else {
          parkingmsgBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
       */
      public Builder addParkingmsg(
          int index, ParkingImage value) {
        if (parkingmsgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParkingmsgIsMutable();
          parkingmsg_.add(index, value);
          onChanged();
        } else {
          parkingmsgBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
       */
      public Builder addParkingmsg(
          ParkingImage.Builder builderForValue) {
        if (parkingmsgBuilder_ == null) {
          ensureParkingmsgIsMutable();
          parkingmsg_.add(builderForValue.build());
          onChanged();
        } else {
          parkingmsgBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
       */
      public Builder addParkingmsg(
          int index, ParkingImage.Builder builderForValue) {
        if (parkingmsgBuilder_ == null) {
          ensureParkingmsgIsMutable();
          parkingmsg_.add(index, builderForValue.build());
          onChanged();
        } else {
          parkingmsgBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
       */
      public Builder addAllParkingmsg(
          Iterable<? extends ParkingImage> values) {
        if (parkingmsgBuilder_ == null) {
          ensureParkingmsgIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, parkingmsg_);
          onChanged();
        } else {
          parkingmsgBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
       */
      public Builder clearParkingmsg() {
        if (parkingmsgBuilder_ == null) {
          parkingmsg_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          parkingmsgBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
       */
      public Builder removeParkingmsg(int index) {
        if (parkingmsgBuilder_ == null) {
          ensureParkingmsgIsMutable();
          parkingmsg_.remove(index);
          onChanged();
        } else {
          parkingmsgBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
       */
      public ParkingImage.Builder getParkingmsgBuilder(
          int index) {
        return getParkingmsgFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
       */
      public ParkingImageOrBuilder getParkingmsgOrBuilder(
          int index) {
        if (parkingmsgBuilder_ == null) {
          return parkingmsg_.get(index);  } else {
          return parkingmsgBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
       */
      public java.util.List<? extends ParkingImageOrBuilder>
           getParkingmsgOrBuilderList() {
        if (parkingmsgBuilder_ != null) {
          return parkingmsgBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(parkingmsg_);
        }
      }
      /**
       * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
       */
      public ParkingImage.Builder addParkingmsgBuilder() {
        return getParkingmsgFieldBuilder().addBuilder(
            ParkingImage.getDefaultInstance());
      }
      /**
       * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
       */
      public ParkingImage.Builder addParkingmsgBuilder(
          int index) {
        return getParkingmsgFieldBuilder().addBuilder(
            index, ParkingImage.getDefaultInstance());
      }
      /**
       * <code>repeated .apollo.plateDetection.ParkingImage parkingmsg = 1;</code>
       */
      public java.util.List<ParkingImage.Builder>
           getParkingmsgBuilderList() {
        return getParkingmsgFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          ParkingImage, ParkingImage.Builder, ParkingImageOrBuilder>
          getParkingmsgFieldBuilder() {
        if (parkingmsgBuilder_ == null) {
          parkingmsgBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              ParkingImage, ParkingImage.Builder, ParkingImageOrBuilder>(
                  parkingmsg_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          parkingmsg_ = null;
        }
        return parkingmsgBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:apollo.plateDetection.ParkingPub)
    }

    // @@protoc_insertion_point(class_scope:apollo.plateDetection.ParkingPub)
    private static final ParkingPub DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ParkingPub();
    }

    public static ParkingPub getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<ParkingPub>
        PARSER = new com.google.protobuf.AbstractParser<ParkingPub>() {
      @Override
      public ParkingPub parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ParkingPub(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ParkingPub> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ParkingPub> getParserForType() {
      return PARSER;
    }

    @Override
    public ParkingPub getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_apollo_plateDetection_Picture_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_apollo_plateDetection_Picture_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_apollo_plateDetection_Point2D_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_apollo_plateDetection_Point2D_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_apollo_plateDetection_ParkingImage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_apollo_plateDetection_ParkingImage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_apollo_plateDetection_ParkingPub_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_apollo_plateDetection_ParkingPub_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\024plateDetection.proto\022\025apollo.plateDete" +
      "ction\"\252\001\n\007Picture\022\016\n\006height\030\001 \001(\r\022\r\n\005wid" +
      "th\030\002 \001(\r\022\020\n\010encoding\030\003 \001(\t\022\014\n\004step\030\004 \001(\r" +
      "\022\014\n\004data\030\005 \001(\014\022\025\n\rrelativeAngle\030\006 \001(\002\022\020\n" +
      "\010distance\030\007 \001(\002\022\024\n\014positionType\030\010 \001(\005\022\023\n" +
      "\013licenseArea\030\t \001(\002\"%\n\007Point2D\022\014\n\001x\030\001 \001(\001" +
      ":\0010\022\014\n\001y\030\002 \001(\001:\0010\"\211\004\n\014ParkingImage\022\020\n\010fr" +
      "ame_id\030\002 \001(\t\022\030\n\020measurement_time\030\003 \001(\001\022\016" +
      "\n\006height\030\004 \001(\r\022\r\n\005width\030\005 \001(\r\022\020\n\010encodin" +
      "g\030\006 \001(\t\022\014\n\004step\030\007 \001(\r\022\014\n\004data\030\010 \001(\014\022/\n\007p" +
      "icture\030\t \003(\0132\036.apollo.plateDetection.Pic" +
      "ture\022\024\n\014positionType\030\n \001(\005\022\021\n\tparkingId\030" +
      "\013 \001(\t\0225\n\rpolygon_point\030\014 \003(\0132\036.apollo.pl" +
      "ateDetection.Point2D\022\025\n\rrelativeAngle\030\r " +
      "\001(\002\022\020\n\010distance\030\016 \001(\002\022\023\n\013parkingType\030\017 \001" +
      "(\005\022\021\n\tprimaryID\030\020 \001(\t\022\024\n\014parkingLotId\030\021 " +
      "\001(\t\022\022\n\nneedDetect\030\022 \001(\010\022\024\n\014licensePlate\030" +
      "\023 \001(\t\022\026\n\016obtainObstacle\030\024 \001(\010\022\035\n\025recogni" +
      "tionConfidence\030\025 \001(\002\022\022\n\nimagesName\030\026 \003(\t" +
      "\022\023\n\013licenseArea\030\027 \001(\002\"E\n\nParkingPub\0227\n\np" +
      "arkingmsg\030\001 \003(\0132#.apollo.plateDetection." +
      "ParkingImageB\035\n\014com.zy.tutorB\rxunjianPro" +
      "tos"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_apollo_plateDetection_Picture_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_apollo_plateDetection_Picture_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_apollo_plateDetection_Picture_descriptor,
        new String[] { "Height", "Width", "Encoding", "Step", "Data", "RelativeAngle", "Distance", "PositionType", "LicenseArea", });
    internal_static_apollo_plateDetection_Point2D_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_apollo_plateDetection_Point2D_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_apollo_plateDetection_Point2D_descriptor,
        new String[] { "X", "Y", });
    internal_static_apollo_plateDetection_ParkingImage_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_apollo_plateDetection_ParkingImage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_apollo_plateDetection_ParkingImage_descriptor,
        new String[] { "FrameId", "MeasurementTime", "Height", "Width", "Encoding", "Step", "Data", "Picture", "PositionType", "ParkingId", "PolygonPoint", "RelativeAngle", "Distance", "ParkingType", "PrimaryID", "ParkingLotId", "NeedDetect", "LicensePlate", "ObtainObstacle", "RecognitionConfidence", "ImagesName", "LicenseArea", });
    internal_static_apollo_plateDetection_ParkingPub_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_apollo_plateDetection_ParkingPub_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_apollo_plateDetection_ParkingPub_descriptor,
        new String[] { "Parkingmsg", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
